This file is a merged representation of a subset of the codebase, containing files not matching ignore patterns, combined into a single document by Repomix.
The content has been processed where empty lines have been removed, line numbers have been added.

# File Summary

## Purpose
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

## File Format
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  a. A header with the file path (## File: path/to/file)
  b. The full contents of the file in a code block

## Usage Guidelines
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
- Pay special attention to the Repository Description. These contain important context and guidelines specific to this project.

## Notes
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching these patterns are excluded: DOCS/repository_context.txt, .env*, *.log, dist, build, coverage
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Empty lines have been removed from all files
- Line numbers have been added to the beginning of each line
- Files are sorted by Git change count (files with more changes are at the bottom)

# User Provided Header
This file is automatically generated by Repomix to provide AI tools with up-to-date repository context. Last updated by GitHub Actions.

# Directory Structure
```
.github/
  workflows/
    phpcs.yml
    repomix.yml
  dependabot.yml
classes/
  class-algolia-woo-indexer.php
  class-check-requirements.php
  class-send-products.php
  class-verify-nonces.php
languages/
  algolia-woo-indexer-en.po
  algolia-woo-indexer.pot
.gitignore
algolia-woo-indexer.php
composer.json
LICENSE
license.txt
phpcs.xml
README.md
readme.txt
renovate.json
repomix.config.json
uninstall.php
```

# Files

## File: languages/algolia-woo-indexer-en.po
```
  1: msgid ""
  2: msgstr ""
  3: "Plural-Forms: nplurals=2; plural=(n != 1);\n"
  4: "Project-Id-Version: Algolia Woocommerce Indexer\n"
  5: "POT-Creation-Date: 2020-07-09 23:13+0200\n"
  6: "PO-Revision-Date: 2020-07-09 23:14+0200\n"
  7: "Language-Team: \n"
  8: "MIME-Version: 1.0\n"
  9: "Content-Type: text/plain; charset=UTF-8\n"
 10: "Content-Transfer-Encoding: 8bit\n"
 11: "X-Generator: Poedit 2.3.1\n"
 12: "X-Poedit-Basepath: ..\n"
 13: "X-Poedit-Flags-xgettext: --add-comments=translators:\n"
 14: "X-Poedit-WPHeader: algolia-woo-indexer.php\n"
 15: "X-Poedit-SourceCharset: UTF-8\n"
 16: "X-Poedit-KeywordsList: __;_e;_n:1,2;_x:1,2c;_ex:1,2c;_nx:4c,1,2;esc_attr__;"
 17: "esc_attr_e;esc_attr_x:1,2c;esc_html__;esc_html__;esc_html_x:1,2c;_n_noop:1,2;"
 18: "_nx_noop:3c,1,2;__ngettext_noop:1,2\n"
 19: "Last-Translator: \n"
 20: "Language: en\n"
 21: "X-Poedit-SearchPath-0: .\n"
 22: "X-Poedit-SearchPathExcluded-0: *.min.js\n"
 23: "X-Poedit-SearchPathExcluded-1: vendor\n"
 24: 
 25: #: classes/class-algolia-woo-indexer.php:89
 26: msgid "Algolia Woo Plugin Settings"
 27: msgstr "Algolia Woo Plugin Settings"
 28: 
 29: #: classes/class-algolia-woo-indexer.php:95
 30: msgid "Application ID"
 31: msgstr "Application ID"
 32: 
 33: #: classes/class-algolia-woo-indexer.php:102
 34: msgid "Admin API Key"
 35: msgstr "Admin API Key"
 36: 
 37: #: classes/class-algolia-woo-indexer.php:109
 38: msgid "Index name (will be created if not existing)"
 39: msgstr "Index name (will be created if not existing)"
 40: 
 41: #: classes/class-algolia-woo-indexer.php:116
 42: msgid "Only index products in stock"
 43: msgstr "Only index products in stock"
 44: 
 45: #: classes/class-algolia-woo-indexer.php:123
 46: msgid "Automatically index new products"
 47: msgstr "Automatically index new products"
 48: 
 49: #: classes/class-algolia-woo-indexer.php:214
 50: msgid "Enter your settings here"
 51: msgstr "Enter your settings here"
 52: 
 53: #: classes/class-algolia-woo-indexer.php:233
 54: msgid ""
 55: "Please check the server requirements for Algolia Woo Indexer. <br/> It "
 56: "requires minimum PHP version 7.2 and WordPress version 5.0"
 57: msgstr ""
 58: "Please check the server requirements for Algolia Woo Indexer. <br/> It "
 59: "requires minimum PHP version 7.2 and WordPress version 5.0"
 60: 
 61: #: classes/class-algolia-woo-indexer.php:261
 62: msgid "WooCommerce plugin must be enabled for Algolia Woo Indexer to work."
 63: msgstr "WooCommerce plugin must be enabled for Algolia Woo Indexer to work."
 64: 
 65: #: classes/class-algolia-woo-indexer.php:295
 66: #: classes/class-algolia-woo-indexer.php:299
 67: msgid "Action is not allowed."
 68: msgstr "Action is not allowed."
 69: 
 70: #: classes/class-algolia-woo-indexer.php:295
 71: #: classes/class-algolia-woo-indexer.php:299
 72: msgid "Error!"
 73: msgstr "Error!"
 74: 
 75: #: classes/class-algolia-woo-indexer.php:408
 76: msgid "All settings need to be set for the plugin to work."
 77: msgstr "All settings need to be set for the plugin to work."
 78: 
 79: #: classes/class-algolia-woo-indexer.php:430
 80: msgid ""
 81: "An error has been encountered. Please check your application ID and API key. "
 82: msgstr ""
 83: "An error has been encountered. Please check your application ID and API key. "
 84: 
 85: #: classes/class-algolia-woo-indexer.php:502
 86: msgid "Product(s) sent to Algolia."
 87: msgstr "Product(s) sent to Algolia."
 88: 
 89: #: classes/class-algolia-woo-indexer.php:539
 90: #: classes/class-algolia-woo-indexer.php:540
 91: #: classes/class-algolia-woo-indexer.php:561
 92: msgid "Algolia Woo Indexer Settings"
 93: msgstr "Algolia Woo Indexer Settings"
 94: 
 95: #: classes/class-algolia-woo-indexer.php:557
 96: msgid "Action not allowed."
 97: msgstr "Action not allowed."
 98: 
 99: #: classes/class-algolia-woo-indexer.php:572
100: msgid "Send products to Algolia"
101: msgstr "Send products to Algolia"
102: 
103: #: classes/class-check-requirements.php:55
104: msgid ""
105: "Algolia Woo Indexer requires the \"mbstring\" PHP extension to be enabled. "
106: "Please contact your hosting provider."
107: msgstr ""
108: "Algolia Woo Indexer requires the \"mbstring\" PHP extension to be enabled. "
109: "Please contact your hosting provider."
110: 
111: #: classes/class-check-requirements.php:59
112: msgid ""
113: "Algolia Woo Indexer needs \"mbregex\" NOT to be disabled. Please contact "
114: "your hosting provider."
115: msgstr ""
116: "Algolia Woo Indexer needs \"mbregex\" NOT to be disabled. Please contact "
117: "your hosting provider."
118: 
119: #: classes/class-check-requirements.php:64
120: msgid ""
121: "Algolia Woo Indexer requires the \"cURL\" PHP extension to be enabled. "
122: "Please contact your hosting provider."
123: msgstr ""
124: "Algolia Woo Indexer requires the \"cURL\" PHP extension to be enabled. "
125: "Please contact your hosting provider."
126: 
127: #. Plugin Name of the plugin/theme
128: msgid "Algolia Woocommerce Indexer"
129: msgstr "Algolia Woocommerce Indexer"
130: 
131: #. Description of the plugin/theme
132: msgid "Implement Algolia indexing from Woocommerce"
133: msgstr "Implement Algolia indexing from Woocommerce"
```

## File: languages/algolia-woo-indexer.pot
```
  1: #, fuzzy
  2: msgid ""
  3: msgstr ""
  4: "Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"
  5: "Project-Id-Version: Algolia Woocommerce Indexer\n"
  6: "POT-Creation-Date: 2020-07-10 04:56+0200\n"
  7: "PO-Revision-Date: 2020-07-10 04:56+0200\n"
  8: "Last-Translator: \n"
  9: "Language-Team: \n"
 10: "MIME-Version: 1.0\n"
 11: "Content-Type: text/plain; charset=UTF-8\n"
 12: "Content-Transfer-Encoding: 8bit\n"
 13: "X-Generator: Poedit 2.3.1\n"
 14: "X-Poedit-Basepath: ..\n"
 15: "X-Poedit-Flags-xgettext: --add-comments=translators:\n"
 16: "X-Poedit-WPHeader: algolia-woo-indexer.php\n"
 17: "X-Poedit-SourceCharset: UTF-8\n"
 18: "X-Poedit-KeywordsList: __;_e;_n:1,2;_x:1,2c;_ex:1,2c;_nx:4c,1,2;esc_attr__;"
 19: "esc_attr_e;esc_attr_x:1,2c;esc_html__;esc_html_e;esc_html_x:1,2c;_n_noop:1,2;"
 20: "_nx_noop:3c,1,2;__ngettext_noop:1,2\n"
 21: "X-Poedit-SearchPath-0: .\n"
 22: "X-Poedit-SearchPathExcluded-0: *.min.js\n"
 23: "X-Poedit-SearchPathExcluded-1: vendor\n"
 24: 
 25: #: classes/class-algolia-woo-indexer.php:89
 26: msgid "Algolia Woo Plugin Settings"
 27: msgstr ""
 28: 
 29: #: classes/class-algolia-woo-indexer.php:95
 30: msgid "Application ID"
 31: msgstr ""
 32: 
 33: #: classes/class-algolia-woo-indexer.php:102
 34: msgid "Admin API Key"
 35: msgstr ""
 36: 
 37: #: classes/class-algolia-woo-indexer.php:109
 38: msgid "Index name (will be created if not existing)"
 39: msgstr ""
 40: 
 41: #: classes/class-algolia-woo-indexer.php:116
 42: msgid "Only index products in stock"
 43: msgstr ""
 44: 
 45: #: classes/class-algolia-woo-indexer.php:123
 46: msgid "Automatically index new products"
 47: msgstr ""
 48: 
 49: #: classes/class-algolia-woo-indexer.php:213
 50: msgid "Enter your settings here"
 51: msgstr ""
 52: 
 53: #: classes/class-algolia-woo-indexer.php:238
 54: msgid ""
 55: "Please check the server requirements for Algolia Woo Indexer. <br/> It "
 56: "requires minimum PHP version 7.2 and WordPress version 5.0"
 57: msgstr ""
 58: 
 59: #: classes/class-algolia-woo-indexer.php:274
 60: msgid "WooCommerce plugin must be enabled for Algolia Woo Indexer to work."
 61: msgstr ""
 62: 
 63: #: classes/class-algolia-woo-indexer.php:325
 64: #: classes/class-algolia-woo-indexer.php:329
 65: msgid "Action is not allowed."
 66: msgstr ""
 67: 
 68: #: classes/class-algolia-woo-indexer.php:325
 69: #: classes/class-algolia-woo-indexer.php:329
 70: msgid "Error!"
 71: msgstr ""
 72: 
 73: #: classes/class-algolia-woo-indexer.php:439
 74: msgid "All settings need to be set for the plugin to work."
 75: msgstr ""
 76: 
 77: #: classes/class-algolia-woo-indexer.php:461
 78: msgid ""
 79: "An error has been encountered. Please check your application ID and API key. "
 80: msgstr ""
 81: 
 82: #: classes/class-algolia-woo-indexer.php:567
 83: msgid "No response from the server. Please check your settings and try again "
 84: msgstr ""
 85: 
 86: #: classes/class-algolia-woo-indexer.php:578
 87: msgid "Product(s) sent to Algolia."
 88: msgstr ""
 89: 
 90: #: classes/class-algolia-woo-indexer.php:615
 91: #: classes/class-algolia-woo-indexer.php:616
 92: #: classes/class-algolia-woo-indexer.php:637
 93: msgid "Algolia Woo Indexer Settings"
 94: msgstr ""
 95: 
 96: #: classes/class-algolia-woo-indexer.php:633
 97: msgid "Action not allowed."
 98: msgstr ""
 99: 
100: #: classes/class-algolia-woo-indexer.php:648
101: msgid "Send products to Algolia"
102: msgstr ""
103: 
104: #: classes/class-check-requirements.php:55
105: msgid ""
106: "Algolia Woo Indexer requires the \"mbstring\" PHP extension to be enabled. "
107: "Please contact your hosting provider."
108: msgstr ""
109: 
110: #: classes/class-check-requirements.php:59
111: msgid ""
112: "Algolia Woo Indexer needs \"mbregex\" NOT to be disabled. Please contact "
113: "your hosting provider."
114: msgstr ""
115: 
116: #: classes/class-check-requirements.php:64
117: msgid ""
118: "Algolia Woo Indexer requires the \"cURL\" PHP extension to be enabled. "
119: "Please contact your hosting provider."
120: msgstr ""
121: 
122: #. Plugin Name of the plugin/theme
123: msgid "Algolia Woocommerce Indexer"
124: msgstr ""
125: 
126: #. Description of the plugin/theme
127: msgid "Implement Algolia indexing from Woocommerce"
128: msgstr ""
129: 
130: #. Author of the plugin/theme
131: msgid "Daniel F"
132: msgstr ""
```

## File: .gitignore
```
  1: ##### Windows
  2: # Windows thumbnail cache files
  3: Thumbs.db
  4: Thumbs.db:encryptable
  5: ehthumbs.db
  6: ehthumbs_vista.db
  7: 
  8: # Dump file
  9: *.stackdump
 10: 
 11: # Folder config file
 12: [Dd]esktop.ini
 13: 
 14: # Recycle Bin used on file shares
 15: $RECYCLE.BIN/
 16: 
 17: # Windows Installer files
 18: *.cab
 19: *.msi
 20: *.msix
 21: *.msm
 22: *.msp
 23: 
 24: # Windows shortcuts
 25: *.lnk
 26: 
 27: ##### Linux
 28: *~
 29: 
 30: # temporary files which can be created if a process still has a handle open of a deleted file
 31: .fuse_hidden*
 32: 
 33: # KDE directory preferences
 34: .directory
 35: 
 36: # Linux trash folder which might appear on any partition or disk
 37: .Trash-*
 38: 
 39: # .nfs files are created when an open file is removed but is still being accessed
 40: .nfs*
 41: 
 42: ##### MacOS
 43: # General
 44: .DS_Store
 45: .AppleDouble
 46: .LSOverride
 47: 
 48: # Icon must end with two \r
 49: Icon
 50: 
 51: # Thumbnails
 52: ._*
 53: 
 54: # Files that might appear in the root of a volume
 55: .DocumentRevisions-V100
 56: .fseventsd
 57: .Spotlight-V100
 58: .TemporaryItems
 59: .Trashes
 60: .VolumeIcon.icns
 61: .com.apple.timemachine.donotpresent
 62: 
 63: # Directories potentially created on remote AFP share
 64: .AppleDB
 65: .AppleDesktop
 66: Network Trash Folder
 67: Temporary Items
 68: .apdisk
 69: 
 70: ##### Backup
 71: *.bak
 72: *.gho
 73: *.ori
 74: *.orig
 75: *.tmp
 76: 
 77: ##### GPG
 78: secring.*
 79: 
 80: ##### Dropbox
 81: # Dropbox settings and caches
 82: .dropbox
 83: .dropbox.attr
 84: .dropbox.cache
 85: 
 86: ##### SynopsysVCS
 87: # Waveform formats
 88: *.vcd
 89: *.vpd
 90: *.evcd
 91: *.fsdb
 92: 
 93: # Default name of the simulation executable.  A different name can be
 94: # specified with this switch (the associated daidir database name is
 95: # also taken from here):  -o <path>/<filename>
 96: simv
 97: 
 98: # Generated for Verilog and VHDL top configs
 99: simv.daidir/
100: simv.db.dir/
101: 
102: # Infrastructure necessary to co-simulate SystemC models with
103: # Verilog/VHDL models.  An alternate directory may be specified with this
104: # switch:  -Mdir=<directory_path>
105: csrc/
106: 
107: # Log file - the following switch allows to specify the file that will be
108: # used to write all messages from simulation:  -l <filename>
109: *.log
110: 
111: # Coverage results (generated with urg) and database location.  The
112: # following switch can also be used:  urg -dir <coverage_directory>.vdb
113: simv.vdb/
114: urgReport/
115: 
116: # DVE and UCLI related files.
117: DVEfiles/
118: ucli.key
119: 
120: # When the design is elaborated for DirectC, the following file is created
121: # with declarations for C/C++ functions.
122: vc_hdrs.h
123: 
124: ##### SVN
125: .svn/
126: 
127: ##### Mercurial
128: .hg/
129: .hgignore
130: .hgsigs
131: .hgsub
132: .hgsubstate
133: .hgtags
134: 
135: ##### Bazaar
136: .bzr/
137: .bzrignore
138: 
139: ##### CVS
140: /CVS/*
141: **/CVS/*
142: .cvsignore
143: */.cvsignore
144: 
145: ##### TortoiseGit
146: # Project-level settings
147: /.tgitconfig
148: 
149: ##### PuTTY
150: # Private key
151: *.ppk
152: 
153: ##### Vim
154: # Swap
155: [._]*.s[a-v][a-z]
156: !*.svg  # comment out if you don't need vector files
157: [._]*.sw[a-p]
158: [._]s[a-rt-v][a-z]
159: [._]ss[a-gi-z]
160: [._]sw[a-p]
161: 
162: # Session
163: Session.vim
164: Sessionx.vim
165: 
166: # Temporary
167: .netrwhist
168: *~
169: # Auto-generated tag files
170: tags
171: # Persistent undo
172: [._]*.un~
173: 
174: ##### Emacs
175: # -*- mode: gitignore; -*-
176: *~
177: \#*\#
178: /.emacs.desktop
179: /.emacs.desktop.lock
180: *.elc
181: auto-save-list
182: tramp
183: .\#*
184: 
185: # Org-mode
186: .org-id-locations
187: *_archive
188: 
189: # flymake-mode
190: *_flymake.*
191: 
192: # eshell files
193: /eshell/history
194: /eshell/lastdir
195: 
196: # elpa packages
197: /elpa/
198: 
199: # reftex files
200: *.rel
201: 
202: # AUCTeX auto folder
203: /auto/
204: 
205: # cask packages
206: .cask/
207: dist/
208: 
209: # Flycheck
210: flycheck_*.el
211: 
212: # server auth directory
213: /server/
214: 
215: # projectiles files
216: .projectile
217: 
218: # directory configuration
219: .dir-locals.el
220: 
221: # network security
222: /network-security.data
223: 
224: ##### SublimeText
225: # Cache files for Sublime Text
226: *.tmlanguage.cache
227: *.tmPreferences.cache
228: *.stTheme.cache
229: 
230: # Workspace files are user-specific
231: *.sublime-workspace
232: 
233: # Project files should be checked into the repository, unless a significant
234: # proportion of contributors will probably not be using Sublime Text
235: # *.sublime-project
236: 
237: # SFTP configuration file
238: sftp-config.json
239: sftp-config-alt*.json
240: 
241: # Package control specific files
242: Package Control.last-run
243: Package Control.ca-list
244: Package Control.ca-bundle
245: Package Control.system-ca-bundle
246: Package Control.cache/
247: Package Control.ca-certs/
248: Package Control.merged-ca-bundle
249: Package Control.user-ca-bundle
250: oscrypto-ca-bundle.crt
251: bh_unicode_properties.cache
252: 
253: # Sublime-github package stores a github token in this file
254: # https://packagecontrol.io/packages/sublime-github
255: GitHub.sublime-settings
256: 
257: ##### Notepad++
258: # Notepad++ backups #
259: *.bak
260: 
261: ##### TextMate
262: *.tmproj
263: *.tmproject
264: tmtags
265: 
266: ##### VisualStudioCode
267: .vscode/*
268: !.vscode/settings.json
269: !.vscode/tasks.json
270: !.vscode/launch.json
271: !.vscode/extensions.json
272: *.code-workspace
273: 
274: # Local History for Visual Studio Code
275: .history/
276: 
277: ##### NetBeans
278: **/nbproject/private/
279: **/nbproject/Makefile-*.mk
280: **/nbproject/Package-*.bash
281: build/
282: nbbuild/
283: dist/
284: nbdist/
285: .nb-gradle/
286: 
287: ##### JetBrains
288: # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
289: # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839
290: 
291: # User-specific stuff
292: .idea/**/workspace.xml
293: .idea/**/tasks.xml
294: .idea/**/usage.statistics.xml
295: .idea/**/dictionaries
296: .idea/**/shelf
297: 
298: # Generated files
299: .idea/**/contentModel.xml
300: 
301: # Sensitive or high-churn files
302: .idea/**/dataSources/
303: .idea/**/dataSources.ids
304: .idea/**/dataSources.local.xml
305: .idea/**/sqlDataSources.xml
306: .idea/**/dynamic.xml
307: .idea/**/uiDesigner.xml
308: .idea/**/dbnavigator.xml
309: 
310: # Gradle
311: .idea/**/gradle.xml
312: .idea/**/libraries
313: 
314: # Gradle and Maven with auto-import
315: # When using Gradle or Maven with auto-import, you should exclude module files,
316: # since they will be recreated, and may cause churn.  Uncomment if using
317: # auto-import.
318: # .idea/artifacts
319: # .idea/compiler.xml
320: # .idea/jarRepositories.xml
321: # .idea/modules.xml
322: # .idea/*.iml
323: # .idea/modules
324: # *.iml
325: # *.ipr
326: 
327: # CMake
328: cmake-build-*/
329: 
330: # Mongo Explorer plugin
331: .idea/**/mongoSettings.xml
332: 
333: # File-based project format
334: *.iws
335: 
336: # IntelliJ
337: out/
338: 
339: # mpeltonen/sbt-idea plugin
340: .idea_modules/
341: 
342: # JIRA plugin
343: atlassian-ide-plugin.xml
344: 
345: # Cursive Clojure plugin
346: .idea/replstate.xml
347: 
348: # Crashlytics plugin (for Android Studio and IntelliJ)
349: com_crashlytics_export_strings.xml
350: crashlytics.properties
351: crashlytics-build.properties
352: fabric.properties
353: 
354: # Editor-based Rest Client
355: .idea/httpRequests
356: 
357: # Android studio 3.1+ serialized cache file
358: .idea/caches/build_file_checksums.ser
359: 
360: ##### Eclipse
361: .metadata
362: bin/
363: tmp/
364: *.tmp
365: *.bak
366: *.swp
367: *~.nib
368: local.properties
369: .settings/
370: .loadpath
371: .recommenders
372: 
373: # External tool builders
374: .externalToolBuilders/
375: 
376: # Locally stored "Eclipse launch configurations"
377: *.launch
378: 
379: # PyDev specific (Python IDE for Eclipse)
380: *.pydevproject
381: 
382: # CDT-specific (C/C++ Development Tooling)
383: .cproject
384: 
385: # CDT- autotools
386: .autotools
387: 
388: # Java annotation processor (APT)
389: .factorypath
390: 
391: # PDT-specific (PHP Development Tools)
392: .buildpath
393: 
394: # sbteclipse plugin
395: .target
396: 
397: # Tern plugin
398: .tern-project
399: 
400: # TeXlipse plugin
401: .texlipse
402: 
403: # STS (Spring Tool Suite)
404: .springBeans
405: 
406: # Code Recommenders
407: .recommenders/
408: 
409: # Annotation Processing
410: .apt_generated/
411: .apt_generated_test/
412: 
413: # Scala IDE specific (Scala & Java development for Eclipse)
414: .cache-main
415: .scala_dependencies
416: .worksheet
417: 
418: # Uncomment this line if you wish to ignore the project description file.
419: # Typically, this file would be tracked if it contains build/dependency configurations:
420: #.project
421: 
422: ##### Dreamweaver
423: # DW Dreamweaver added files
424: _notes
425: _compareTemp
426: configs/
427: dwsync.xml
428: dw_php_codehinting.config
429: *.mno
430: 
431: ##### CodeKit
432: # General CodeKit files to ignore
433: config.codekit
434: config.codekit3
435: /min
436: 
437: ##### Gradle
438: .gradle
439: **/build/
440: !src/**/build/
441: 
442: # Ignore Gradle GUI config
443: gradle-app.setting
444: 
445: # Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
446: !gradle-wrapper.jar
447: 
448: # Cache of project
449: .gradletasknamecache
450: 
451: # # Work around https://youtrack.jetbrains.com/issue/IDEA-116898
452: # gradle/wrapper/gradle-wrapper.properties
453: 
454: # Commit your application's lock file https://getcomposer.org/doc/01-basic-usage.md#commit-your-composer-lock-file-to-version-control
455: # You may choose to ignore a library lock file http://getcomposer.org/doc/02-libraries.md#lock-file
456: composer.lock
457: 
458: ##### PHP CodeSniffer
459: # gitignore for the PHP Codesniffer framework
460: # website: https://github.com/squizlabs/PHP_CodeSniffer
461: #
462: # Recommended template: PHP.gitignore
463: 
464: /wpcs/*
465: 
466: ##### SASS
467: .sass-cache/
468: *.css.map
469: *.sass.map
470: *.scss.map
471: 
472: ##### Composer
473: composer.phar
474: 
475: # Comment this out if you do not want to install dependencies manually with "composer install"
476: # /vendor/
```

## File: LICENSE
```
  1: GNU GENERAL PUBLIC LICENSE
  2:                        Version 3, 29 June 2007
  3: 
  4:  Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
  5:  Everyone is permitted to copy and distribute verbatim copies
  6:  of this license document, but changing it is not allowed.
  7: 
  8:                             Preamble
  9: 
 10:   The GNU General Public License is a free, copyleft license for
 11: software and other kinds of works.
 12: 
 13:   The licenses for most software and other practical works are designed
 14: to take away your freedom to share and change the works.  By contrast,
 15: the GNU General Public License is intended to guarantee your freedom to
 16: share and change all versions of a program--to make sure it remains free
 17: software for all its users.  We, the Free Software Foundation, use the
 18: GNU General Public License for most of our software; it applies also to
 19: any other work released this way by its authors.  You can apply it to
 20: your programs, too.
 21: 
 22:   When we speak of free software, we are referring to freedom, not
 23: price.  Our General Public Licenses are designed to make sure that you
 24: have the freedom to distribute copies of free software (and charge for
 25: them if you wish), that you receive source code or can get it if you
 26: want it, that you can change the software or use pieces of it in new
 27: free programs, and that you know you can do these things.
 28: 
 29:   To protect your rights, we need to prevent others from denying you
 30: these rights or asking you to surrender the rights.  Therefore, you have
 31: certain responsibilities if you distribute copies of the software, or if
 32: you modify it: responsibilities to respect the freedom of others.
 33: 
 34:   For example, if you distribute copies of such a program, whether
 35: gratis or for a fee, you must pass on to the recipients the same
 36: freedoms that you received.  You must make sure that they, too, receive
 37: or can get the source code.  And you must show them these terms so they
 38: know their rights.
 39: 
 40:   Developers that use the GNU GPL protect your rights with two steps:
 41: (1) assert copyright on the software, and (2) offer you this License
 42: giving you legal permission to copy, distribute and/or modify it.
 43: 
 44:   For the developers' and authors' protection, the GPL clearly explains
 45: that there is no warranty for this free software.  For both users' and
 46: authors' sake, the GPL requires that modified versions be marked as
 47: changed, so that their problems will not be attributed erroneously to
 48: authors of previous versions.
 49: 
 50:   Some devices are designed to deny users access to install or run
 51: modified versions of the software inside them, although the manufacturer
 52: can do so.  This is fundamentally incompatible with the aim of
 53: protecting users' freedom to change the software.  The systematic
 54: pattern of such abuse occurs in the area of products for individuals to
 55: use, which is precisely where it is most unacceptable.  Therefore, we
 56: have designed this version of the GPL to prohibit the practice for those
 57: products.  If such problems arise substantially in other domains, we
 58: stand ready to extend this provision to those domains in future versions
 59: of the GPL, as needed to protect the freedom of users.
 60: 
 61:   Finally, every program is threatened constantly by software patents.
 62: States should not allow patents to restrict development and use of
 63: software on general-purpose computers, but in those that do, we wish to
 64: avoid the special danger that patents applied to a free program could
 65: make it effectively proprietary.  To prevent this, the GPL assures that
 66: patents cannot be used to render the program non-free.
 67: 
 68:   The precise terms and conditions for copying, distribution and
 69: modification follow.
 70: 
 71:                        TERMS AND CONDITIONS
 72: 
 73:   0. Definitions.
 74: 
 75:   "This License" refers to version 3 of the GNU General Public License.
 76: 
 77:   "Copyright" also means copyright-like laws that apply to other kinds of
 78: works, such as semiconductor masks.
 79: 
 80:   "The Program" refers to any copyrightable work licensed under this
 81: License.  Each licensee is addressed as "you".  "Licensees" and
 82: "recipients" may be individuals or organizations.
 83: 
 84:   To "modify" a work means to copy from or adapt all or part of the work
 85: in a fashion requiring copyright permission, other than the making of an
 86: exact copy.  The resulting work is called a "modified version" of the
 87: earlier work or a work "based on" the earlier work.
 88: 
 89:   A "covered work" means either the unmodified Program or a work based
 90: on the Program.
 91: 
 92:   To "propagate" a work means to do anything with it that, without
 93: permission, would make you directly or secondarily liable for
 94: infringement under applicable copyright law, except executing it on a
 95: computer or modifying a private copy.  Propagation includes copying,
 96: distribution (with or without modification), making available to the
 97: public, and in some countries other activities as well.
 98: 
 99:   To "convey" a work means any kind of propagation that enables other
100: parties to make or receive copies.  Mere interaction with a user through
101: a computer network, with no transfer of a copy, is not conveying.
102: 
103:   An interactive user interface displays "Appropriate Legal Notices"
104: to the extent that it includes a convenient and prominently visible
105: feature that (1) displays an appropriate copyright notice, and (2)
106: tells the user that there is no warranty for the work (except to the
107: extent that warranties are provided), that licensees may convey the
108: work under this License, and how to view a copy of this License.  If
109: the interface presents a list of user commands or options, such as a
110: menu, a prominent item in the list meets this criterion.
111: 
112:   1. Source Code.
113: 
114:   The "source code" for a work means the preferred form of the work
115: for making modifications to it.  "Object code" means any non-source
116: form of a work.
117: 
118:   A "Standard Interface" means an interface that either is an official
119: standard defined by a recognized standards body, or, in the case of
120: interfaces specified for a particular programming language, one that
121: is widely used among developers working in that language.
122: 
123:   The "System Libraries" of an executable work include anything, other
124: than the work as a whole, that (a) is included in the normal form of
125: packaging a Major Component, but which is not part of that Major
126: Component, and (b) serves only to enable use of the work with that
127: Major Component, or to implement a Standard Interface for which an
128: implementation is available to the public in source code form.  A
129: "Major Component", in this context, means a major essential component
130: (kernel, window system, and so on) of the specific operating system
131: (if any) on which the executable work runs, or a compiler used to
132: produce the work, or an object code interpreter used to run it.
133: 
134:   The "Corresponding Source" for a work in object code form means all
135: the source code needed to generate, install, and (for an executable
136: work) run the object code and to modify the work, including scripts to
137: control those activities.  However, it does not include the work's
138: System Libraries, or general-purpose tools or generally available free
139: programs which are used unmodified in performing those activities but
140: which are not part of the work.  For example, Corresponding Source
141: includes interface definition files associated with source files for
142: the work, and the source code for shared libraries and dynamically
143: linked subprograms that the work is specifically designed to require,
144: such as by intimate data communication or control flow between those
145: subprograms and other parts of the work.
146: 
147:   The Corresponding Source need not include anything that users
148: can regenerate automatically from other parts of the Corresponding
149: Source.
150: 
151:   The Corresponding Source for a work in source code form is that
152: same work.
153: 
154:   2. Basic Permissions.
155: 
156:   All rights granted under this License are granted for the term of
157: copyright on the Program, and are irrevocable provided the stated
158: conditions are met.  This License explicitly affirms your unlimited
159: permission to run the unmodified Program.  The output from running a
160: covered work is covered by this License only if the output, given its
161: content, constitutes a covered work.  This License acknowledges your
162: rights of fair use or other equivalent, as provided by copyright law.
163: 
164:   You may make, run and propagate covered works that you do not
165: convey, without conditions so long as your license otherwise remains
166: in force.  You may convey covered works to others for the sole purpose
167: of having them make modifications exclusively for you, or provide you
168: with facilities for running those works, provided that you comply with
169: the terms of this License in conveying all material for which you do
170: not control copyright.  Those thus making or running the covered works
171: for you must do so exclusively on your behalf, under your direction
172: and control, on terms that prohibit them from making any copies of
173: your copyrighted material outside their relationship with you.
174: 
175:   Conveying under any other circumstances is permitted solely under
176: the conditions stated below.  Sublicensing is not allowed; section 10
177: makes it unnecessary.
178: 
179:   3. Protecting Users' Legal Rights From Anti-Circumvention Law.
180: 
181:   No covered work shall be deemed part of an effective technological
182: measure under any applicable law fulfilling obligations under article
183: 11 of the WIPO copyright treaty adopted on 20 December 1996, or
184: similar laws prohibiting or restricting circumvention of such
185: measures.
186: 
187:   When you convey a covered work, you waive any legal power to forbid
188: circumvention of technological measures to the extent such circumvention
189: is effected by exercising rights under this License with respect to
190: the covered work, and you disclaim any intention to limit operation or
191: modification of the work as a means of enforcing, against the work's
192: users, your or third parties' legal rights to forbid circumvention of
193: technological measures.
194: 
195:   4. Conveying Verbatim Copies.
196: 
197:   You may convey verbatim copies of the Program's source code as you
198: receive it, in any medium, provided that you conspicuously and
199: appropriately publish on each copy an appropriate copyright notice;
200: keep intact all notices stating that this License and any
201: non-permissive terms added in accord with section 7 apply to the code;
202: keep intact all notices of the absence of any warranty; and give all
203: recipients a copy of this License along with the Program.
204: 
205:   You may charge any price or no price for each copy that you convey,
206: and you may offer support or warranty protection for a fee.
207: 
208:   5. Conveying Modified Source Versions.
209: 
210:   You may convey a work based on the Program, or the modifications to
211: produce it from the Program, in the form of source code under the
212: terms of section 4, provided that you also meet all of these conditions:
213: 
214:     a) The work must carry prominent notices stating that you modified
215:     it, and giving a relevant date.
216: 
217:     b) The work must carry prominent notices stating that it is
218:     released under this License and any conditions added under section
219:     7.  This requirement modifies the requirement in section 4 to
220:     "keep intact all notices".
221: 
222:     c) You must license the entire work, as a whole, under this
223:     License to anyone who comes into possession of a copy.  This
224:     License will therefore apply, along with any applicable section 7
225:     additional terms, to the whole of the work, and all its parts,
226:     regardless of how they are packaged.  This License gives no
227:     permission to license the work in any other way, but it does not
228:     invalidate such permission if you have separately received it.
229: 
230:     d) If the work has interactive user interfaces, each must display
231:     Appropriate Legal Notices; however, if the Program has interactive
232:     interfaces that do not display Appropriate Legal Notices, your
233:     work need not make them do so.
234: 
235:   A compilation of a covered work with other separate and independent
236: works, which are not by their nature extensions of the covered work,
237: and which are not combined with it such as to form a larger program,
238: in or on a volume of a storage or distribution medium, is called an
239: "aggregate" if the compilation and its resulting copyright are not
240: used to limit the access or legal rights of the compilation's users
241: beyond what the individual works permit.  Inclusion of a covered work
242: in an aggregate does not cause this License to apply to the other
243: parts of the aggregate.
244: 
245:   6. Conveying Non-Source Forms.
246: 
247:   You may convey a covered work in object code form under the terms
248: of sections 4 and 5, provided that you also convey the
249: machine-readable Corresponding Source under the terms of this License,
250: in one of these ways:
251: 
252:     a) Convey the object code in, or embodied in, a physical product
253:     (including a physical distribution medium), accompanied by the
254:     Corresponding Source fixed on a durable physical medium
255:     customarily used for software interchange.
256: 
257:     b) Convey the object code in, or embodied in, a physical product
258:     (including a physical distribution medium), accompanied by a
259:     written offer, valid for at least three years and valid for as
260:     long as you offer spare parts or customer support for that product
261:     model, to give anyone who possesses the object code either (1) a
262:     copy of the Corresponding Source for all the software in the
263:     product that is covered by this License, on a durable physical
264:     medium customarily used for software interchange, for a price no
265:     more than your reasonable cost of physically performing this
266:     conveying of source, or (2) access to copy the
267:     Corresponding Source from a network server at no charge.
268: 
269:     c) Convey individual copies of the object code with a copy of the
270:     written offer to provide the Corresponding Source.  This
271:     alternative is allowed only occasionally and noncommercially, and
272:     only if you received the object code with such an offer, in accord
273:     with subsection 6b.
274: 
275:     d) Convey the object code by offering access from a designated
276:     place (gratis or for a charge), and offer equivalent access to the
277:     Corresponding Source in the same way through the same place at no
278:     further charge.  You need not require recipients to copy the
279:     Corresponding Source along with the object code.  If the place to
280:     copy the object code is a network server, the Corresponding Source
281:     may be on a different server (operated by you or a third party)
282:     that supports equivalent copying facilities, provided you maintain
283:     clear directions next to the object code saying where to find the
284:     Corresponding Source.  Regardless of what server hosts the
285:     Corresponding Source, you remain obligated to ensure that it is
286:     available for as long as needed to satisfy these requirements.
287: 
288:     e) Convey the object code using peer-to-peer transmission, provided
289:     you inform other peers where the object code and Corresponding
290:     Source of the work are being offered to the general public at no
291:     charge under subsection 6d.
292: 
293:   A separable portion of the object code, whose source code is excluded
294: from the Corresponding Source as a System Library, need not be
295: included in conveying the object code work.
296: 
297:   A "User Product" is either (1) a "consumer product", which means any
298: tangible personal property which is normally used for personal, family,
299: or household purposes, or (2) anything designed or sold for incorporation
300: into a dwelling.  In determining whether a product is a consumer product,
301: doubtful cases shall be resolved in favor of coverage.  For a particular
302: product received by a particular user, "normally used" refers to a
303: typical or common use of that class of product, regardless of the status
304: of the particular user or of the way in which the particular user
305: actually uses, or expects or is expected to use, the product.  A product
306: is a consumer product regardless of whether the product has substantial
307: commercial, industrial or non-consumer uses, unless such uses represent
308: the only significant mode of use of the product.
309: 
310:   "Installation Information" for a User Product means any methods,
311: procedures, authorization keys, or other information required to install
312: and execute modified versions of a covered work in that User Product from
313: a modified version of its Corresponding Source.  The information must
314: suffice to ensure that the continued functioning of the modified object
315: code is in no case prevented or interfered with solely because
316: modification has been made.
317: 
318:   If you convey an object code work under this section in, or with, or
319: specifically for use in, a User Product, and the conveying occurs as
320: part of a transaction in which the right of possession and use of the
321: User Product is transferred to the recipient in perpetuity or for a
322: fixed term (regardless of how the transaction is characterized), the
323: Corresponding Source conveyed under this section must be accompanied
324: by the Installation Information.  But this requirement does not apply
325: if neither you nor any third party retains the ability to install
326: modified object code on the User Product (for example, the work has
327: been installed in ROM).
328: 
329:   The requirement to provide Installation Information does not include a
330: requirement to continue to provide support service, warranty, or updates
331: for a work that has been modified or installed by the recipient, or for
332: the User Product in which it has been modified or installed.  Access to a
333: network may be denied when the modification itself materially and
334: adversely affects the operation of the network or violates the rules and
335: protocols for communication across the network.
336: 
337:   Corresponding Source conveyed, and Installation Information provided,
338: in accord with this section must be in a format that is publicly
339: documented (and with an implementation available to the public in
340: source code form), and must require no special password or key for
341: unpacking, reading or copying.
342: 
343:   7. Additional Terms.
344: 
345:   "Additional permissions" are terms that supplement the terms of this
346: License by making exceptions from one or more of its conditions.
347: Additional permissions that are applicable to the entire Program shall
348: be treated as though they were included in this License, to the extent
349: that they are valid under applicable law.  If additional permissions
350: apply only to part of the Program, that part may be used separately
351: under those permissions, but the entire Program remains governed by
352: this License without regard to the additional permissions.
353: 
354:   When you convey a copy of a covered work, you may at your option
355: remove any additional permissions from that copy, or from any part of
356: it.  (Additional permissions may be written to require their own
357: removal in certain cases when you modify the work.)  You may place
358: additional permissions on material, added by you to a covered work,
359: for which you have or can give appropriate copyright permission.
360: 
361:   Notwithstanding any other provision of this License, for material you
362: add to a covered work, you may (if authorized by the copyright holders of
363: that material) supplement the terms of this License with terms:
364: 
365:     a) Disclaiming warranty or limiting liability differently from the
366:     terms of sections 15 and 16 of this License; or
367: 
368:     b) Requiring preservation of specified reasonable legal notices or
369:     author attributions in that material or in the Appropriate Legal
370:     Notices displayed by works containing it; or
371: 
372:     c) Prohibiting misrepresentation of the origin of that material, or
373:     requiring that modified versions of such material be marked in
374:     reasonable ways as different from the original version; or
375: 
376:     d) Limiting the use for publicity purposes of names of licensors or
377:     authors of the material; or
378: 
379:     e) Declining to grant rights under trademark law for use of some
380:     trade names, trademarks, or service marks; or
381: 
382:     f) Requiring indemnification of licensors and authors of that
383:     material by anyone who conveys the material (or modified versions of
384:     it) with contractual assumptions of liability to the recipient, for
385:     any liability that these contractual assumptions directly impose on
386:     those licensors and authors.
387: 
388:   All other non-permissive additional terms are considered "further
389: restrictions" within the meaning of section 10.  If the Program as you
390: received it, or any part of it, contains a notice stating that it is
391: governed by this License along with a term that is a further
392: restriction, you may remove that term.  If a license document contains
393: a further restriction but permits relicensing or conveying under this
394: License, you may add to a covered work material governed by the terms
395: of that license document, provided that the further restriction does
396: not survive such relicensing or conveying.
397: 
398:   If you add terms to a covered work in accord with this section, you
399: must place, in the relevant source files, a statement of the
400: additional terms that apply to those files, or a notice indicating
401: where to find the applicable terms.
402: 
403:   Additional terms, permissive or non-permissive, may be stated in the
404: form of a separately written license, or stated as exceptions;
405: the above requirements apply either way.
406: 
407:   8. Termination.
408: 
409:   You may not propagate or modify a covered work except as expressly
410: provided under this License.  Any attempt otherwise to propagate or
411: modify it is void, and will automatically terminate your rights under
412: this License (including any patent licenses granted under the third
413: paragraph of section 11).
414: 
415:   However, if you cease all violation of this License, then your
416: license from a particular copyright holder is reinstated (a)
417: provisionally, unless and until the copyright holder explicitly and
418: finally terminates your license, and (b) permanently, if the copyright
419: holder fails to notify you of the violation by some reasonable means
420: prior to 60 days after the cessation.
421: 
422:   Moreover, your license from a particular copyright holder is
423: reinstated permanently if the copyright holder notifies you of the
424: violation by some reasonable means, this is the first time you have
425: received notice of violation of this License (for any work) from that
426: copyright holder, and you cure the violation prior to 30 days after
427: your receipt of the notice.
428: 
429:   Termination of your rights under this section does not terminate the
430: licenses of parties who have received copies or rights from you under
431: this License.  If your rights have been terminated and not permanently
432: reinstated, you do not qualify to receive new licenses for the same
433: material under section 10.
434: 
435:   9. Acceptance Not Required for Having Copies.
436: 
437:   You are not required to accept this License in order to receive or
438: run a copy of the Program.  Ancillary propagation of a covered work
439: occurring solely as a consequence of using peer-to-peer transmission
440: to receive a copy likewise does not require acceptance.  However,
441: nothing other than this License grants you permission to propagate or
442: modify any covered work.  These actions infringe copyright if you do
443: not accept this License.  Therefore, by modifying or propagating a
444: covered work, you indicate your acceptance of this License to do so.
445: 
446:   10. Automatic Licensing of Downstream Recipients.
447: 
448:   Each time you convey a covered work, the recipient automatically
449: receives a license from the original licensors, to run, modify and
450: propagate that work, subject to this License.  You are not responsible
451: for enforcing compliance by third parties with this License.
452: 
453:   An "entity transaction" is a transaction transferring control of an
454: organization, or substantially all assets of one, or subdividing an
455: organization, or merging organizations.  If propagation of a covered
456: work results from an entity transaction, each party to that
457: transaction who receives a copy of the work also receives whatever
458: licenses to the work the party's predecessor in interest had or could
459: give under the previous paragraph, plus a right to possession of the
460: Corresponding Source of the work from the predecessor in interest, if
461: the predecessor has it or can get it with reasonable efforts.
462: 
463:   You may not impose any further restrictions on the exercise of the
464: rights granted or affirmed under this License.  For example, you may
465: not impose a license fee, royalty, or other charge for exercise of
466: rights granted under this License, and you may not initiate litigation
467: (including a cross-claim or counterclaim in a lawsuit) alleging that
468: any patent claim is infringed by making, using, selling, offering for
469: sale, or importing the Program or any portion of it.
470: 
471:   11. Patents.
472: 
473:   A "contributor" is a copyright holder who authorizes use under this
474: License of the Program or a work on which the Program is based.  The
475: work thus licensed is called the contributor's "contributor version".
476: 
477:   A contributor's "essential patent claims" are all patent claims
478: owned or controlled by the contributor, whether already acquired or
479: hereafter acquired, that would be infringed by some manner, permitted
480: by this License, of making, using, or selling its contributor version,
481: but do not include claims that would be infringed only as a
482: consequence of further modification of the contributor version.  For
483: purposes of this definition, "control" includes the right to grant
484: patent sublicenses in a manner consistent with the requirements of
485: this License.
486: 
487:   Each contributor grants you a non-exclusive, worldwide, royalty-free
488: patent license under the contributor's essential patent claims, to
489: make, use, sell, offer for sale, import and otherwise run, modify and
490: propagate the contents of its contributor version.
491: 
492:   In the following three paragraphs, a "patent license" is any express
493: agreement or commitment, however denominated, not to enforce a patent
494: (such as an express permission to practice a patent or covenant not to
495: sue for patent infringement).  To "grant" such a patent license to a
496: party means to make such an agreement or commitment not to enforce a
497: patent against the party.
498: 
499:   If you convey a covered work, knowingly relying on a patent license,
500: and the Corresponding Source of the work is not available for anyone
501: to copy, free of charge and under the terms of this License, through a
502: publicly available network server or other readily accessible means,
503: then you must either (1) cause the Corresponding Source to be so
504: available, or (2) arrange to deprive yourself of the benefit of the
505: patent license for this particular work, or (3) arrange, in a manner
506: consistent with the requirements of this License, to extend the patent
507: license to downstream recipients.  "Knowingly relying" means you have
508: actual knowledge that, but for the patent license, your conveying the
509: covered work in a country, or your recipient's use of the covered work
510: in a country, would infringe one or more identifiable patents in that
511: country that you have reason to believe are valid.
512: 
513:   If, pursuant to or in connection with a single transaction or
514: arrangement, you convey, or propagate by procuring conveyance of, a
515: covered work, and grant a patent license to some of the parties
516: receiving the covered work authorizing them to use, propagate, modify
517: or convey a specific copy of the covered work, then the patent license
518: you grant is automatically extended to all recipients of the covered
519: work and works based on it.
520: 
521:   A patent license is "discriminatory" if it does not include within
522: the scope of its coverage, prohibits the exercise of, or is
523: conditioned on the non-exercise of one or more of the rights that are
524: specifically granted under this License.  You may not convey a covered
525: work if you are a party to an arrangement with a third party that is
526: in the business of distributing software, under which you make payment
527: to the third party based on the extent of your activity of conveying
528: the work, and under which the third party grants, to any of the
529: parties who would receive the covered work from you, a discriminatory
530: patent license (a) in connection with copies of the covered work
531: conveyed by you (or copies made from those copies), or (b) primarily
532: for and in connection with specific products or compilations that
533: contain the covered work, unless you entered into that arrangement,
534: or that patent license was granted, prior to 28 March 2007.
535: 
536:   Nothing in this License shall be construed as excluding or limiting
537: any implied license or other defenses to infringement that may
538: otherwise be available to you under applicable patent law.
539: 
540:   12. No Surrender of Others' Freedom.
541: 
542:   If conditions are imposed on you (whether by court order, agreement or
543: otherwise) that contradict the conditions of this License, they do not
544: excuse you from the conditions of this License.  If you cannot convey a
545: covered work so as to satisfy simultaneously your obligations under this
546: License and any other pertinent obligations, then as a consequence you may
547: not convey it at all.  For example, if you agree to terms that obligate you
548: to collect a royalty for further conveying from those to whom you convey
549: the Program, the only way you could satisfy both those terms and this
550: License would be to refrain entirely from conveying the Program.
551: 
552:   13. Use with the GNU Affero General Public License.
553: 
554:   Notwithstanding any other provision of this License, you have
555: permission to link or combine any covered work with a work licensed
556: under version 3 of the GNU Affero General Public License into a single
557: combined work, and to convey the resulting work.  The terms of this
558: License will continue to apply to the part which is the covered work,
559: but the special requirements of the GNU Affero General Public License,
560: section 13, concerning interaction through a network will apply to the
561: combination as such.
562: 
563:   14. Revised Versions of this License.
564: 
565:   The Free Software Foundation may publish revised and/or new versions of
566: the GNU General Public License from time to time.  Such new versions will
567: be similar in spirit to the present version, but may differ in detail to
568: address new problems or concerns.
569: 
570:   Each version is given a distinguishing version number.  If the
571: Program specifies that a certain numbered version of the GNU General
572: Public License "or any later version" applies to it, you have the
573: option of following the terms and conditions either of that numbered
574: version or of any later version published by the Free Software
575: Foundation.  If the Program does not specify a version number of the
576: GNU General Public License, you may choose any version ever published
577: by the Free Software Foundation.
578: 
579:   If the Program specifies that a proxy can decide which future
580: versions of the GNU General Public License can be used, that proxy's
581: public statement of acceptance of a version permanently authorizes you
582: to choose that version for the Program.
583: 
584:   Later license versions may give you additional or different
585: permissions.  However, no additional obligations are imposed on any
586: author or copyright holder as a result of your choosing to follow a
587: later version.
588: 
589:   15. Disclaimer of Warranty.
590: 
591:   THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
592: APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
593: HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
594: OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
595: THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
596: PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
597: IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
598: ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
599: 
600:   16. Limitation of Liability.
601: 
602:   IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
603: WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
604: THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
605: GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
606: USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
607: DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
608: PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
609: EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
610: SUCH DAMAGES.
611: 
612:   17. Interpretation of Sections 15 and 16.
613: 
614:   If the disclaimer of warranty and limitation of liability provided
615: above cannot be given local legal effect according to their terms,
616: reviewing courts shall apply local law that most closely approximates
617: an absolute waiver of all civil liability in connection with the
618: Program, unless a warranty or assumption of liability accompanies a
619: copy of the Program in return for a fee.
620: 
621:                      END OF TERMS AND CONDITIONS
622: 
623:             How to Apply These Terms to Your New Programs
624: 
625:   If you develop a new program, and you want it to be of the greatest
626: possible use to the public, the best way to achieve this is to make it
627: free software which everyone can redistribute and change under these terms.
628: 
629:   To do so, attach the following notices to the program.  It is safest
630: to attach them to the start of each source file to most effectively
631: state the exclusion of warranty; and each file should have at least
632: the "copyright" line and a pointer to where the full notice is found.
633: 
634:     <one line to give the program's name and a brief idea of what it does.>
635:     Copyright (C) <year>  <name of author>
636: 
637:     This program is free software: you can redistribute it and/or modify
638:     it under the terms of the GNU General Public License as published by
639:     the Free Software Foundation, either version 3 of the License, or
640:     (at your option) any later version.
641: 
642:     This program is distributed in the hope that it will be useful,
643:     but WITHOUT ANY WARRANTY; without even the implied warranty of
644:     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
645:     GNU General Public License for more details.
646: 
647:     You should have received a copy of the GNU General Public License
648:     along with this program.  If not, see <https://www.gnu.org/licenses/>.
649: 
650: Also add information on how to contact you by electronic and paper mail.
651: 
652:   If the program does terminal interaction, make it output a short
653: notice like this when it starts in an interactive mode:
654: 
655:     <program>  Copyright (C) <year>  <name of author>
656:     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
657:     This is free software, and you are welcome to redistribute it
658:     under certain conditions; type `show c' for details.
659: 
660: The hypothetical commands `show w' and `show c' should show the appropriate
661: parts of the General Public License.  Of course, your program's commands
662: might be different; for a GUI interface, you would use an "about box".
663: 
664:   You should also get your employer (if you work as a programmer) or school,
665: if any, to sign a "copyright disclaimer" for the program, if necessary.
666: For more information on this, and how to apply and follow the GNU GPL, see
667: <https://www.gnu.org/licenses/>.
668: 
669:   The GNU General Public License does not permit incorporating your program
670: into proprietary programs.  If your program is a subroutine library, you
671: may consider it more useful to permit linking proprietary applications with
672: the library.  If this is what you want to do, use the GNU Lesser General
673: Public License instead of this License.  But first, please read
674: <https://www.gnu.org/licenses/why-not-lgpl.html>.
```

## File: license.txt
```
  1: WooCommerce - eCommerce for WordPress
  2: 
  3: Copyright 2015 by the contributors
  4: 
  5: This program is free software; you can redistribute it and/or modify
  6: it under the terms of the GNU General Public License as published by
  7: the Free Software Foundation; either version 3 of the License, or
  8: (at your option) any later version.
  9: 
 10: This program is distributed in the hope that it will be useful,
 11: but WITHOUT ANY WARRANTY; without even the implied warranty of
 12: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 13: GNU General Public License for more details.
 14: 
 15: You should have received a copy of the GNU General Public License
 16: along with this program; if not, write to the Free Software
 17: Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 18: 
 19: =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 20: 
 21:   GNU GENERAL PUBLIC LICENSE
 22:                        Version 3, 29 June 2007
 23: 
 24:  Copyright © 2007 Free Software Foundation, Inc. <https://fsf.org/>
 25:  Everyone is permitted to copy and distribute verbatim copies
 26:  of this license document, but changing it is not allowed.
 27: 
 28:                             Preamble
 29: 
 30:   The GNU General Public License is a free, copyleft license for
 31: software and other kinds of works.
 32: 
 33:   The licenses for most software and other practical works are designed
 34: to take away your freedom to share and change the works.  By contrast,
 35: the GNU General Public License is intended to guarantee your freedom to
 36: share and change all versions of a program--to make sure it remains free
 37: software for all its users.  We, the Free Software Foundation, use the
 38: GNU General Public License for most of our software; it applies also to
 39: any other work released this way by its authors.  You can apply it to
 40: your programs, too.
 41: 
 42:   When we speak of free software, we are referring to freedom, not
 43: price.  Our General Public Licenses are designed to make sure that you
 44: have the freedom to distribute copies of free software (and charge for
 45: them if you wish), that you receive source code or can get it if you
 46: want it, that you can change the software or use pieces of it in new
 47: free programs, and that you know you can do these things.
 48: 
 49:   To protect your rights, we need to prevent others from denying you
 50: these rights or asking you to surrender the rights.  Therefore, you have
 51: certain responsibilities if you distribute copies of the software, or if
 52: you modify it: responsibilities to respect the freedom of others.
 53: 
 54:   For example, if you distribute copies of such a program, whether
 55: gratis or for a fee, you must pass on to the recipients the same
 56: freedoms that you received.  You must make sure that they, too, receive
 57: or can get the source code.  And you must show them these terms so they
 58: know their rights.
 59: 
 60:   Developers that use the GNU GPL protect your rights with two steps:
 61: (1) assert copyright on the software, and (2) offer you this License
 62: giving you legal permission to copy, distribute and/or modify it.
 63: 
 64:   For the developers' and authors' protection, the GPL clearly explains
 65: that there is no warranty for this free software.  For both users' and
 66: authors' sake, the GPL requires that modified versions be marked as
 67: changed, so that their problems will not be attributed erroneously to
 68: authors of previous versions.
 69: 
 70:   Some devices are designed to deny users access to install or run
 71: modified versions of the software inside them, although the manufacturer
 72: can do so.  This is fundamentally incompatible with the aim of
 73: protecting users' freedom to change the software.  The systematic
 74: pattern of such abuse occurs in the area of products for individuals to
 75: use, which is precisely where it is most unacceptable.  Therefore, we
 76: have designed this version of the GPL to prohibit the practice for those
 77: products.  If such problems arise substantially in other domains, we
 78: stand ready to extend this provision to those domains in future versions
 79: of the GPL, as needed to protect the freedom of users.
 80: 
 81:   Finally, every program is threatened constantly by software patents.
 82: States should not allow patents to restrict development and use of
 83: software on general-purpose computers, but in those that do, we wish to
 84: avoid the special danger that patents applied to a free program could
 85: make it effectively proprietary.  To prevent this, the GPL assures that
 86: patents cannot be used to render the program non-free.
 87: 
 88:   The precise terms and conditions for copying, distribution and
 89: modification follow.
 90: 
 91:                        TERMS AND CONDITIONS
 92: 
 93:   0. Definitions.
 94: 
 95:   "This License" refers to version 3 of the GNU General Public License.
 96: 
 97:   "Copyright" also means copyright-like laws that apply to other kinds of
 98: works, such as semiconductor masks.
 99: 
100:   "The Program" refers to any copyrightable work licensed under this
101: License.  Each licensee is addressed as "you".  "Licensees" and
102: "recipients" may be individuals or organizations.
103: 
104:   To "modify" a work means to copy from or adapt all or part of the work
105: in a fashion requiring copyright permission, other than the making of an
106: exact copy.  The resulting work is called a "modified version" of the
107: earlier work or a work "based on" the earlier work.
108: 
109:   A "covered work" means either the unmodified Program or a work based
110: on the Program.
111: 
112:   To "propagate" a work means to do anything with it that, without
113: permission, would make you directly or secondarily liable for
114: infringement under applicable copyright law, except executing it on a
115: computer or modifying a private copy.  Propagation includes copying,
116: distribution (with or without modification), making available to the
117: public, and in some countries other activities as well.
118: 
119:   To "convey" a work means any kind of propagation that enables other
120: parties to make or receive copies.  Mere interaction with a user through
121: a computer network, with no transfer of a copy, is not conveying.
122: 
123:   An interactive user interface displays "Appropriate Legal Notices"
124: to the extent that it includes a convenient and prominently visible
125: feature that (1) displays an appropriate copyright notice, and (2)
126: tells the user that there is no warranty for the work (except to the
127: extent that warranties are provided), that licensees may convey the
128: work under this License, and how to view a copy of this License.  If
129: the interface presents a list of user commands or options, such as a
130: menu, a prominent item in the list meets this criterion.
131: 
132:   1. Source Code.
133: 
134:   The "source code" for a work means the preferred form of the work
135: for making modifications to it.  "Object code" means any non-source
136: form of a work.
137: 
138:   A "Standard Interface" means an interface that either is an official
139: standard defined by a recognized standards body, or, in the case of
140: interfaces specified for a particular programming language, one that
141: is widely used among developers working in that language.
142: 
143:   The "System Libraries" of an executable work include anything, other
144: than the work as a whole, that (a) is included in the normal form of
145: packaging a Major Component, but which is not part of that Major
146: Component, and (b) serves only to enable use of the work with that
147: Major Component, or to implement a Standard Interface for which an
148: implementation is available to the public in source code form.  A
149: "Major Component", in this context, means a major essential component
150: (kernel, window system, and so on) of the specific operating system
151: (if any) on which the executable work runs, or a compiler used to
152: produce the work, or an object code interpreter used to run it.
153: 
154:   The "Corresponding Source" for a work in object code form means all
155: the source code needed to generate, install, and (for an executable
156: work) run the object code and to modify the work, including scripts to
157: control those activities.  However, it does not include the work's
158: System Libraries, or general-purpose tools or generally available free
159: programs which are used unmodified in performing those activities but
160: which are not part of the work.  For example, Corresponding Source
161: includes interface definition files associated with source files for
162: the work, and the source code for shared libraries and dynamically
163: linked subprograms that the work is specifically designed to require,
164: such as by intimate data communication or control flow between those
165: subprograms and other parts of the work.
166: 
167:   The Corresponding Source need not include anything that users
168: can regenerate automatically from other parts of the Corresponding
169: Source.
170: 
171:   The Corresponding Source for a work in source code form is that
172: same work.
173: 
174:   2. Basic Permissions.
175: 
176:   All rights granted under this License are granted for the term of
177: copyright on the Program, and are irrevocable provided the stated
178: conditions are met.  This License explicitly affirms your unlimited
179: permission to run the unmodified Program.  The output from running a
180: covered work is covered by this License only if the output, given its
181: content, constitutes a covered work.  This License acknowledges your
182: rights of fair use or other equivalent, as provided by copyright law.
183: 
184:   You may make, run and propagate covered works that you do not
185: convey, without conditions so long as your license otherwise remains
186: in force.  You may convey covered works to others for the sole purpose
187: of having them make modifications exclusively for you, or provide you
188: with facilities for running those works, provided that you comply with
189: the terms of this License in conveying all material for which you do
190: not control copyright.  Those thus making or running the covered works
191: for you must do so exclusively on your behalf, under your direction
192: and control, on terms that prohibit them from making any copies of
193: your copyrighted material outside their relationship with you.
194: 
195:   Conveying under any other circumstances is permitted solely under
196: the conditions stated below.  Sublicensing is not allowed; section 10
197: makes it unnecessary.
198: 
199:   3. Protecting Users' Legal Rights From Anti-Circumvention Law.
200: 
201:   No covered work shall be deemed part of an effective technological
202: measure under any applicable law fulfilling obligations under article
203: 11 of the WIPO copyright treaty adopted on 20 December 1996, or
204: similar laws prohibiting or restricting circumvention of such
205: measures.
206: 
207:   When you convey a covered work, you waive any legal power to forbid
208: circumvention of technological measures to the extent such circumvention
209: is effected by exercising rights under this License with respect to
210: the covered work, and you disclaim any intention to limit operation or
211: modification of the work as a means of enforcing, against the work's
212: users, your or third parties' legal rights to forbid circumvention of
213: technological measures.
214: 
215:   4. Conveying Verbatim Copies.
216: 
217:   You may convey verbatim copies of the Program's source code as you
218: receive it, in any medium, provided that you conspicuously and
219: appropriately publish on each copy an appropriate copyright notice;
220: keep intact all notices stating that this License and any
221: non-permissive terms added in accord with section 7 apply to the code;
222: keep intact all notices of the absence of any warranty; and give all
223: recipients a copy of this License along with the Program.
224: 
225:   You may charge any price or no price for each copy that you convey,
226: and you may offer support or warranty protection for a fee.
227: 
228:   5. Conveying Modified Source Versions.
229: 
230:   You may convey a work based on the Program, or the modifications to
231: produce it from the Program, in the form of source code under the
232: terms of section 4, provided that you also meet all of these conditions:
233: 
234:     a) The work must carry prominent notices stating that you modified
235:     it, and giving a relevant date.
236: 
237:     b) The work must carry prominent notices stating that it is
238:     released under this License and any conditions added under section
239:     7.  This requirement modifies the requirement in section 4 to
240:     "keep intact all notices".
241: 
242:     c) You must license the entire work, as a whole, under this
243:     License to anyone who comes into possession of a copy.  This
244:     License will therefore apply, along with any applicable section 7
245:     additional terms, to the whole of the work, and all its parts,
246:     regardless of how they are packaged.  This License gives no
247:     permission to license the work in any other way, but it does not
248:     invalidate such permission if you have separately received it.
249: 
250:     d) If the work has interactive user interfaces, each must display
251:     Appropriate Legal Notices; however, if the Program has interactive
252:     interfaces that do not display Appropriate Legal Notices, your
253:     work need not make them do so.
254: 
255:   A compilation of a covered work with other separate and independent
256: works, which are not by their nature extensions of the covered work,
257: and which are not combined with it such as to form a larger program,
258: in or on a volume of a storage or distribution medium, is called an
259: "aggregate" if the compilation and its resulting copyright are not
260: used to limit the access or legal rights of the compilation's users
261: beyond what the individual works permit.  Inclusion of a covered work
262: in an aggregate does not cause this License to apply to the other
263: parts of the aggregate.
264: 
265:   6. Conveying Non-Source Forms.
266: 
267:   You may convey a covered work in object code form under the terms
268: of sections 4 and 5, provided that you also convey the
269: machine-readable Corresponding Source under the terms of this License,
270: in one of these ways:
271: 
272:     a) Convey the object code in, or embodied in, a physical product
273:     (including a physical distribution medium), accompanied by the
274:     Corresponding Source fixed on a durable physical medium
275:     customarily used for software interchange.
276: 
277:     b) Convey the object code in, or embodied in, a physical product
278:     (including a physical distribution medium), accompanied by a
279:     written offer, valid for at least three years and valid for as
280:     long as you offer spare parts or customer support for that product
281:     model, to give anyone who possesses the object code either (1) a
282:     copy of the Corresponding Source for all the software in the
283:     product that is covered by this License, on a durable physical
284:     medium customarily used for software interchange, for a price no
285:     more than your reasonable cost of physically performing this
286:     conveying of source, or (2) access to copy the
287:     Corresponding Source from a network server at no charge.
288: 
289:     c) Convey individual copies of the object code with a copy of the
290:     written offer to provide the Corresponding Source.  This
291:     alternative is allowed only occasionally and noncommercially, and
292:     only if you received the object code with such an offer, in accord
293:     with subsection 6b.
294: 
295:     d) Convey the object code by offering access from a designated
296:     place (gratis or for a charge), and offer equivalent access to the
297:     Corresponding Source in the same way through the same place at no
298:     further charge.  You need not require recipients to copy the
299:     Corresponding Source along with the object code.  If the place to
300:     copy the object code is a network server, the Corresponding Source
301:     may be on a different server (operated by you or a third party)
302:     that supports equivalent copying facilities, provided you maintain
303:     clear directions next to the object code saying where to find the
304:     Corresponding Source.  Regardless of what server hosts the
305:     Corresponding Source, you remain obligated to ensure that it is
306:     available for as long as needed to satisfy these requirements.
307: 
308:     e) Convey the object code using peer-to-peer transmission, provided
309:     you inform other peers where the object code and Corresponding
310:     Source of the work are being offered to the general public at no
311:     charge under subsection 6d.
312: 
313:   A separable portion of the object code, whose source code is excluded
314: from the Corresponding Source as a System Library, need not be
315: included in conveying the object code work.
316: 
317:   A "User Product" is either (1) a "consumer product", which means any
318: tangible personal property which is normally used for personal, family,
319: or household purposes, or (2) anything designed or sold for incorporation
320: into a dwelling.  In determining whether a product is a consumer product,
321: doubtful cases shall be resolved in favor of coverage.  For a particular
322: product received by a particular user, "normally used" refers to a
323: typical or common use of that class of product, regardless of the status
324: of the particular user or of the way in which the particular user
325: actually uses, or expects or is expected to use, the product.  A product
326: is a consumer product regardless of whether the product has substantial
327: commercial, industrial or non-consumer uses, unless such uses represent
328: the only significant mode of use of the product.
329: 
330:   "Installation Information" for a User Product means any methods,
331: procedures, authorization keys, or other information required to install
332: and execute modified versions of a covered work in that User Product from
333: a modified version of its Corresponding Source.  The information must
334: suffice to ensure that the continued functioning of the modified object
335: code is in no case prevented or interfered with solely because
336: modification has been made.
337: 
338:   If you convey an object code work under this section in, or with, or
339: specifically for use in, a User Product, and the conveying occurs as
340: part of a transaction in which the right of possession and use of the
341: User Product is transferred to the recipient in perpetuity or for a
342: fixed term (regardless of how the transaction is characterized), the
343: Corresponding Source conveyed under this section must be accompanied
344: by the Installation Information.  But this requirement does not apply
345: if neither you nor any third party retains the ability to install
346: modified object code on the User Product (for example, the work has
347: been installed in ROM).
348: 
349:   The requirement to provide Installation Information does not include a
350: requirement to continue to provide support service, warranty, or updates
351: for a work that has been modified or installed by the recipient, or for
352: the User Product in which it has been modified or installed.  Access to a
353: network may be denied when the modification itself materially and
354: adversely affects the operation of the network or violates the rules and
355: protocols for communication across the network.
356: 
357:   Corresponding Source conveyed, and Installation Information provided,
358: in accord with this section must be in a format that is publicly
359: documented (and with an implementation available to the public in
360: source code form), and must require no special password or key for
361: unpacking, reading or copying.
362: 
363:   7. Additional Terms.
364: 
365:   "Additional permissions" are terms that supplement the terms of this
366: License by making exceptions from one or more of its conditions.
367: Additional permissions that are applicable to the entire Program shall
368: be treated as though they were included in this License, to the extent
369: that they are valid under applicable law.  If additional permissions
370: apply only to part of the Program, that part may be used separately
371: under those permissions, but the entire Program remains governed by
372: this License without regard to the additional permissions.
373: 
374:   When you convey a copy of a covered work, you may at your option
375: remove any additional permissions from that copy, or from any part of
376: it.  (Additional permissions may be written to require their own
377: removal in certain cases when you modify the work.)  You may place
378: additional permissions on material, added by you to a covered work,
379: for which you have or can give appropriate copyright permission.
380: 
381:   Notwithstanding any other provision of this License, for material you
382: add to a covered work, you may (if authorized by the copyright holders of
383: that material) supplement the terms of this License with terms:
384: 
385:     a) Disclaiming warranty or limiting liability differently from the
386:     terms of sections 15 and 16 of this License; or
387: 
388:     b) Requiring preservation of specified reasonable legal notices or
389:     author attributions in that material or in the Appropriate Legal
390:     Notices displayed by works containing it; or
391: 
392:     c) Prohibiting misrepresentation of the origin of that material, or
393:     requiring that modified versions of such material be marked in
394:     reasonable ways as different from the original version; or
395: 
396:     d) Limiting the use for publicity purposes of names of licensors or
397:     authors of the material; or
398: 
399:     e) Declining to grant rights under trademark law for use of some
400:     trade names, trademarks, or service marks; or
401: 
402:     f) Requiring indemnification of licensors and authors of that
403:     material by anyone who conveys the material (or modified versions of
404:     it) with contractual assumptions of liability to the recipient, for
405:     any liability that these contractual assumptions directly impose on
406:     those licensors and authors.
407: 
408:   All other non-permissive additional terms are considered "further
409: restrictions" within the meaning of section 10.  If the Program as you
410: received it, or any part of it, contains a notice stating that it is
411: governed by this License along with a term that is a further
412: restriction, you may remove that term.  If a license document contains
413: a further restriction but permits relicensing or conveying under this
414: License, you may add to a covered work material governed by the terms
415: of that license document, provided that the further restriction does
416: not survive such relicensing or conveying.
417: 
418:   If you add terms to a covered work in accord with this section, you
419: must place, in the relevant source files, a statement of the
420: additional terms that apply to those files, or a notice indicating
421: where to find the applicable terms.
422: 
423:   Additional terms, permissive or non-permissive, may be stated in the
424: form of a separately written license, or stated as exceptions;
425: the above requirements apply either way.
426: 
427:   8. Termination.
428: 
429:   You may not propagate or modify a covered work except as expressly
430: provided under this License.  Any attempt otherwise to propagate or
431: modify it is void, and will automatically terminate your rights under
432: this License (including any patent licenses granted under the third
433: paragraph of section 11).
434: 
435:   However, if you cease all violation of this License, then your
436: license from a particular copyright holder is reinstated (a)
437: provisionally, unless and until the copyright holder explicitly and
438: finally terminates your license, and (b) permanently, if the copyright
439: holder fails to notify you of the violation by some reasonable means
440: prior to 60 days after the cessation.
441: 
442:   Moreover, your license from a particular copyright holder is
443: reinstated permanently if the copyright holder notifies you of the
444: violation by some reasonable means, this is the first time you have
445: received notice of violation of this License (for any work) from that
446: copyright holder, and you cure the violation prior to 30 days after
447: your receipt of the notice.
448: 
449:   Termination of your rights under this section does not terminate the
450: licenses of parties who have received copies or rights from you under
451: this License.  If your rights have been terminated and not permanently
452: reinstated, you do not qualify to receive new licenses for the same
453: material under section 10.
454: 
455:   9. Acceptance Not Required for Having Copies.
456: 
457:   You are not required to accept this License in order to receive or
458: run a copy of the Program.  Ancillary propagation of a covered work
459: occurring solely as a consequence of using peer-to-peer transmission
460: to receive a copy likewise does not require acceptance.  However,
461: nothing other than this License grants you permission to propagate or
462: modify any covered work.  These actions infringe copyright if you do
463: not accept this License.  Therefore, by modifying or propagating a
464: covered work, you indicate your acceptance of this License to do so.
465: 
466:   10. Automatic Licensing of Downstream Recipients.
467: 
468:   Each time you convey a covered work, the recipient automatically
469: receives a license from the original licensors, to run, modify and
470: propagate that work, subject to this License.  You are not responsible
471: for enforcing compliance by third parties with this License.
472: 
473:   An "entity transaction" is a transaction transferring control of an
474: organization, or substantially all assets of one, or subdividing an
475: organization, or merging organizations.  If propagation of a covered
476: work results from an entity transaction, each party to that
477: transaction who receives a copy of the work also receives whatever
478: licenses to the work the party's predecessor in interest had or could
479: give under the previous paragraph, plus a right to possession of the
480: Corresponding Source of the work from the predecessor in interest, if
481: the predecessor has it or can get it with reasonable efforts.
482: 
483:   You may not impose any further restrictions on the exercise of the
484: rights granted or affirmed under this License.  For example, you may
485: not impose a license fee, royalty, or other charge for exercise of
486: rights granted under this License, and you may not initiate litigation
487: (including a cross-claim or counterclaim in a lawsuit) alleging that
488: any patent claim is infringed by making, using, selling, offering for
489: sale, or importing the Program or any portion of it.
490: 
491:   11. Patents.
492: 
493:   A "contributor" is a copyright holder who authorizes use under this
494: License of the Program or a work on which the Program is based.  The
495: work thus licensed is called the contributor's "contributor version".
496: 
497:   A contributor's "essential patent claims" are all patent claims
498: owned or controlled by the contributor, whether already acquired or
499: hereafter acquired, that would be infringed by some manner, permitted
500: by this License, of making, using, or selling its contributor version,
501: but do not include claims that would be infringed only as a
502: consequence of further modification of the contributor version.  For
503: purposes of this definition, "control" includes the right to grant
504: patent sublicenses in a manner consistent with the requirements of
505: this License.
506: 
507:   Each contributor grants you a non-exclusive, worldwide, royalty-free
508: patent license under the contributor's essential patent claims, to
509: make, use, sell, offer for sale, import and otherwise run, modify and
510: propagate the contents of its contributor version.
511: 
512:   In the following three paragraphs, a "patent license" is any express
513: agreement or commitment, however denominated, not to enforce a patent
514: (such as an express permission to practice a patent or covenant not to
515: sue for patent infringement).  To "grant" such a patent license to a
516: party means to make such an agreement or commitment not to enforce a
517: patent against the party.
518: 
519:   If you convey a covered work, knowingly relying on a patent license,
520: and the Corresponding Source of the work is not available for anyone
521: to copy, free of charge and under the terms of this License, through a
522: publicly available network server or other readily accessible means,
523: then you must either (1) cause the Corresponding Source to be so
524: available, or (2) arrange to deprive yourself of the benefit of the
525: patent license for this particular work, or (3) arrange, in a manner
526: consistent with the requirements of this License, to extend the patent
527: license to downstream recipients.  "Knowingly relying" means you have
528: actual knowledge that, but for the patent license, your conveying the
529: covered work in a country, or your recipient's use of the covered work
530: in a country, would infringe one or more identifiable patents in that
531: country that you have reason to believe are valid.
532: 
533:   If, pursuant to or in connection with a single transaction or
534: arrangement, you convey, or propagate by procuring conveyance of, a
535: covered work, and grant a patent license to some of the parties
536: receiving the covered work authorizing them to use, propagate, modify
537: or convey a specific copy of the covered work, then the patent license
538: you grant is automatically extended to all recipients of the covered
539: work and works based on it.
540: 
541:   A patent license is "discriminatory" if it does not include within
542: the scope of its coverage, prohibits the exercise of, or is
543: conditioned on the non-exercise of one or more of the rights that are
544: specifically granted under this License.  You may not convey a covered
545: work if you are a party to an arrangement with a third party that is
546: in the business of distributing software, under which you make payment
547: to the third party based on the extent of your activity of conveying
548: the work, and under which the third party grants, to any of the
549: parties who would receive the covered work from you, a discriminatory
550: patent license (a) in connection with copies of the covered work
551: conveyed by you (or copies made from those copies), or (b) primarily
552: for and in connection with specific products or compilations that
553: contain the covered work, unless you entered into that arrangement,
554: or that patent license was granted, prior to 28 March 2007.
555: 
556:   Nothing in this License shall be construed as excluding or limiting
557: any implied license or other defenses to infringement that may
558: otherwise be available to you under applicable patent law.
559: 
560:   12. No Surrender of Others' Freedom.
561: 
562:   If conditions are imposed on you (whether by court order, agreement or
563: otherwise) that contradict the conditions of this License, they do not
564: excuse you from the conditions of this License.  If you cannot convey a
565: covered work so as to satisfy simultaneously your obligations under this
566: License and any other pertinent obligations, then as a consequence you may
567: not convey it at all.  For example, if you agree to terms that obligate you
568: to collect a royalty for further conveying from those to whom you convey
569: the Program, the only way you could satisfy both those terms and this
570: License would be to refrain entirely from conveying the Program.
571: 
572:   13. Use with the GNU Affero General Public License.
573: 
574:   Notwithstanding any other provision of this License, you have
575: permission to link or combine any covered work with a work licensed
576: under version 3 of the GNU Affero General Public License into a single
577: combined work, and to convey the resulting work.  The terms of this
578: License will continue to apply to the part which is the covered work,
579: but the special requirements of the GNU Affero General Public License,
580: section 13, concerning interaction through a network will apply to the
581: combination as such.
582: 
583:   14. Revised Versions of this License.
584: 
585:   The Free Software Foundation may publish revised and/or new versions of
586: the GNU General Public License from time to time.  Such new versions will
587: be similar in spirit to the present version, but may differ in detail to
588: address new problems or concerns.
589: 
590:   Each version is given a distinguishing version number.  If the
591: Program specifies that a certain numbered version of the GNU General
592: Public License "or any later version" applies to it, you have the
593: option of following the terms and conditions either of that numbered
594: version or of any later version published by the Free Software
595: Foundation.  If the Program does not specify a version number of the
596: GNU General Public License, you may choose any version ever published
597: by the Free Software Foundation.
598: 
599:   If the Program specifies that a proxy can decide which future
600: versions of the GNU General Public License can be used, that proxy's
601: public statement of acceptance of a version permanently authorizes you
602: to choose that version for the Program.
603: 
604:   Later license versions may give you additional or different
605: permissions.  However, no additional obligations are imposed on any
606: author or copyright holder as a result of your choosing to follow a
607: later version.
608: 
609:   15. Disclaimer of Warranty.
610: 
611:   THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
612: APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
613: HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
614: OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
615: THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
616: PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
617: IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
618: ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
619: 
620:   16. Limitation of Liability.
621: 
622:   IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
623: WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
624: THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
625: GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
626: USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
627: DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
628: PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
629: EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
630: SUCH DAMAGES.
631: 
632:   17. Interpretation of Sections 15 and 16.
633: 
634:   If the disclaimer of warranty and limitation of liability provided
635: above cannot be given local legal effect according to their terms,
636: reviewing courts shall apply local law that most closely approximates
637: an absolute waiver of all civil liability in connection with the
638: Program, unless a warranty or assumption of liability accompanies a
639: copy of the Program in return for a fee.
640: 
641:                      END OF TERMS AND CONDITIONS
642: 
643:             How to Apply These Terms to Your New Programs
644: 
645:   If you develop a new program, and you want it to be of the greatest
646: possible use to the public, the best way to achieve this is to make it
647: free software which everyone can redistribute and change under these terms.
648: 
649:   To do so, attach the following notices to the program.  It is safest
650: to attach them to the start of each source file to most effectively
651: state the exclusion of warranty; and each file should have at least
652: the "copyright" line and a pointer to where the full notice is found.
653: 
654:     <one line to give the program's name and a brief idea of what it does.>
655:     Copyright Â© <year>  <name of author>
656: 
657:     This program is free software: you can redistribute it and/or modify
658:     it under the terms of the GNU General Public License as published by
659:     the Free Software Foundation, either version 3 of the License, or
660:     (at your option) any later version.
661: 
662:     This program is distributed in the hope that it will be useful,
663:     but WITHOUT ANY WARRANTY; without even the implied warranty of
664:     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
665:     GNU General Public License for more details.
666: 
667:     You should have received a copy of the GNU General Public License
668:     along with this program.  If not, see <https://www.gnu.org/licenses/>.
669: 
670: Also add information on how to contact you by electronic and paper mail.
671: 
672:   If the program does terminal interaction, make it output a short
673: notice like this when it starts in an interactive mode:
674: 
675:     <program>  Copyright Â© <year>  <name of author>
676:     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
677:     This is free software, and you are welcome to redistribute it
678:     under certain conditions; type `show c' for details.
679: 
680: The hypothetical commands `show w' and `show c' should show the appropriate
681: parts of the General Public License.  Of course, your program's commands
682: might be different; for a GUI interface, you would use an "about box".
683: 
684:   You should also get your employer (if you work as a programmer) or school,
685: if any, to sign a "copyright disclaimer" for the program, if necessary.
686: For more information on this, and how to apply and follow the GNU GPL, see
687: <https://www.gnu.org/licenses/>.
688: 
689:   The GNU General Public License does not permit incorporating your program
690: into proprietary programs.  If your program is a subroutine library, you
691: may consider it more useful to permit linking proprietary applications with
692: the library.  If this is what you want to do, use the GNU Lesser General
693: Public License instead of this License.  But first, please read
694: <https://www.gnu.org/philosophy/why-not-lgpl.html>.
```

## File: phpcs.xml
```xml
 1: <?xml version="1.0"?>
 2: <ruleset name="">
 3: 	<description>Generally-applicable sniffs for WordPress plugins</description>
 4: 	<rule ref="WordPress">
 5: 		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
 6: 		<exclude name="WordPress.Files.FileName.InvalidClassFileName" />
 7: 	</rule>
 8: 	<rule ref="PHPCompatibility"/>
 9: 	<config name="testVersion" value="7.3-"/>
10: 	<arg name="extensions" value="php"/>
11: 	<arg value="s"/>
12: 	<exclude-pattern>*/dev-lib/*</exclude-pattern>
13: 	<exclude-pattern>*/node_modules/*</exclude-pattern>
14: 	<exclude-pattern>*/vendor/*</exclude-pattern>
15: 	<exclude-pattern>*/algoliasearch-client-php/*</exclude-pattern>
16: 	<exclude-pattern>.github/</exclude-pattern>	
17: </ruleset>
```

## File: uninstall.php
```php
 1: <?php
 2: /**
 3:  * Delete the saved options freom the database when we uninstall the plugin
 4:  * We do not do it when we deactivate the plugin, in case we want to maintain the data
 5:  *
 6:  * @package         algolia-woo-indexer
 7:  */
 8: /*
 9: *  If uninstall was not called from WordPress, then exit
10: */
11: if ( ! defined( 'WP_UNINSTALL_PLUGIN' ) ) {
12: 	exit;
13: }
14: define( 'ALGOWOO_DB_OPTION', '_algolia_woo_indexer' );
15: delete_option( ALGOWOO_DB_OPTION . '_application_id' );
16: delete_option( ALGOWOO_DB_OPTION . '_admin_api_key' );
17: delete_option( ALGOWOO_DB_OPTION . '_index_name' );
18: delete_option( ALGOWOO_DB_OPTION . '_index_in_stock' );
19: delete_option( ALGOWOO_DB_OPTION . '_automatically_send_new_products' );
```

## File: .github/workflows/repomix.yml
```yaml
 1: name: Repository Documentation
 2: on:
 3:   push:
 4:     branches:
 5:       - main
 6:   workflow_dispatch: # allows manual triggering
 7: permissions:
 8:   contents: write
 9:   pull-requests: write
10: jobs:
11:   analyze:
12:     runs-on: ubuntu-latest
13:     steps:
14:       - name: Checkout repository
15:         uses: actions/checkout@v4
16:         with:
17:           fetch-depth: 0 # fetch all history for better context
18:       - name: Wait for other checks
19:         run: |
20:           echo "Waiting for 5 minutes to allow other checks to complete..."
21:           sleep 300
22:       - name: Setup Node.js
23:         uses: actions/setup-node@v4
24:         with:
25:           node-version: "22"
26:       - name: Install Repomix
27:         run: npm install -g repomix
28:       - name: Generate Repository Documentation
29:         run: |
30:           echo "Creating DOCS directory..."
31:           mkdir -p DOCS
32:           echo "Running Repomix..."
33:           if ! repomix --output DOCS/repository_context.txt --style markdown --remove-empty-lines --verbose; then
34:             echo "Error: Repomix command failed"
35:             # Print directory contents for debugging
36:             echo "DOCS directory contents:"
37:             ls -la DOCS/
38:             exit 1
39:           fi
40:           echo "Verifying output file..."
41:           if [ ! -f "DOCS/repository_context.txt" ]; then
42:             echo "Error: repository_context.txt was not created"
43:             # Print directory contents for debugging
44:             echo "DOCS directory contents:"
45:             ls -la DOCS/
46:             exit 1
47:           fi
48:           if [ ! -s "DOCS/repository_context.txt" ]; then
49:             echo "Error: repository_context.txt is empty"
50:             exit 1
51:           fi
52:           echo "Repository context file generated successfully"
53:           echo "File size: $(stat --format=%s "DOCS/repository_context.txt") bytes"
54:           echo "First few lines of the file:"
55:           head -n 5 "DOCS/repository_context.txt"
56:       # Update Documentation
57:       - name: Commit and Push Changes
58:         run: |
59:           echo "Configuring git..."
60:           git config --local user.email "github-actions[bot]@users.noreply.github.com"
61:           git config --local user.name "github-actions[bot]"
62:           echo "Checking for changes..."
63:           if [[ -n "$(git status --porcelain)" ]]; then
64:             echo "Changes detected, committing..."
65:             # Stage only repository_context.txt to avoid unintended changes
66:             if ! git add DOCS/repository_context.txt; then
67:               echo "Error: Failed to stage repository_context.txt"
68:               exit 1
69:             fi
70:             if ! git commit -m "docs: update repository context via Repomix [skip ci]"; then
71:               echo "Error: Failed to create commit"
72:               exit 1
73:             fi
74:             echo "Pushing to main branch..."
75:             if ! git push; then
76:               echo "Error: Failed to push changes"
77:               exit 1
78:             fi
79:             echo "Successfully updated repository context"
80:           else
81:             echo "No changes detected in repository_context.txt"
82:           fi
```

## File: .github/dependabot.yml
```yaml
1: version: 2
2: updates:
3: - package-ecosystem: composer
4:   directory: "/"
5:   schedule:
6:     interval: daily
7:     time: "04:00"
8:   open-pull-requests-limit: 10
```

## File: classes/class-check-requirements.php
```php
 1: <?php
 2: /**
 3:  * Class for checking plugin requirements
 4:  * Like checking PHP version, WordPress version and so on
 5:  *
 6:  * @package algolia-woo-indexer
 7:  */
 8: namespace Algowoo;
 9: /**
10:  * Define minimum required versions of PHP and WordPress
11:  */
12: define('ALGOLIA_MIN_PHP_VERSION', '8.1');
13: define('ALGOLIA_MIN_WP_VERSION', '6.1');
14: /**
15:  * Abort if this file is called directly
16:  */
17: if (! defined('ABSPATH')) {
18:     exit;
19: }
20: if (! class_exists('Algolia_Check_Requirements')) {
21:     /**
22:      * Check requirements for Algolia plugin
23:      */
24:     class Algolia_Check_Requirements
25:     {
26:         /**
27:          * Check for required PHP version.
28:          *
29:          * @return bool
30:          */
31:         public static function algolia_php_version_check()
32:         {
33:             if (version_compare(PHP_VERSION, ALGOLIA_MIN_PHP_VERSION, '<')) {
34:                 return false;
35:             }
36:             return true;
37:         }
38: 		/**
39: 		 * Check if values are empty and display error notice if not all values have been set
40: 		 *
41: 		 *  @param string $algolia_application_id Algolia application ID.
42: 		 * 	@param string $algolia_api_key Algolia API key.
43: 		 * 	@param string $algolia_index_name Algolia index name.
44: 		 * 
45: 		 */
46: 		public static function check_algolia_input_values($algolia_application_id, $algolia_api_key, $algolia_index_name )
47: 		{	
48: 			if (empty($algolia_application_id) || empty($algolia_api_key || empty($algolia_index_name))) {
49:                 add_action(
50:                     'admin_notices',
51:                     function () {
52:                         echo '<div class="error notice">
53: 							  <p>' . esc_html__('All settings need to be set for the plugin to work.', 'algolia-woo-indexer') . '</p>
54: 							</div>';
55:                     }
56:                 );    
57:             }
58:         }
59:         /**
60:          * Check for required WordPress version.
61:          *
62:          * @return bool
63:          */
64:         public static function algolia_wp_version_check()
65:         {
66:             if (version_compare($GLOBALS['wp_version'], ALGOLIA_MIN_WP_VERSION, '<')) {
67:                 return false;
68:             }
69:             return true;
70:         }
71:         /**
72:          * Check that we have all of the required PHP extensions installed
73:          *
74:          * @return void
75:          */
76:         public static function check_unmet_requirements()
77:         {
78:             if (! extension_loaded('mbstring')) {
79:                 echo '<div class="error notice">
80: 					  <p>' . esc_html__('Algolia Woo Indexer requires the "mbstring" PHP extension to be enabled. Please contact your hosting provider.', 'algolia-woo-indexer') . '</p>
81: 				  </div>';
82:             } elseif (! function_exists('mb_ereg_replace')) {
83:                 echo '<div class="error notice">
84: 					  <p>' . esc_html__('Algolia Woo Indexer needs "mbregex" NOT to be disabled. Please contact your hosting provider.', 'algolia-woo-indexer') . '</p>
85: 				  </div>';
86:             }
87:             if (! extension_loaded('curl')) {
88:                 echo '<div class="error notice">
89: 					  <p>' . esc_html__('Algolia Woo Indexer requires the "cURL" PHP extension to be enabled. Please contact your hosting provider.', 'algolia-woo-indexer') . '</p>
90: 				  </div>';
91:                 return;
92:             }
93:         }
94: 	}
95: }
```

## File: classes/class-verify-nonces.php
```php
 1: <?php
 2: /**
 3:  * Main Algolia Verify Nonces class
 4:  * Called from main plugin file class-algolia-woo-indexer.php
 5:  *
 6:  * @package algolia-woo-indexer
 7:  */
 8: namespace Algowoo;
 9: /**
10:  * Abort if this file is called directly
11:  */
12: if ( ! defined( 'ABSPATH' ) ) {
13: 	exit;
14: }
15: if ( ! class_exists( 'Algolia_Verify_Nonces' ) ) {
16: 	/**
17: 	 * Verify submitted nonces
18: 	 */
19: 	class Algolia_Verify_Nonces {
20: 			/**
21: 			 * Verify nonces before we update options and settings           *
22: 			 *
23: 			 * @return void
24: 			 */
25: 		public static function verify_settings_nonce() {
26: 			/**
27: 			 * Filter incoming nonces and values
28: 			 */
29: 			$settings_nonce = filter_input( INPUT_POST, 'algolia_woo_indexer_admin_api_nonce_name', FILTER_DEFAULT );
30: 			/**
31: 			 * Return boolean depending on if the nonce has been set
32: 			 */
33: 			if ( ! isset( $settings_nonce ) ) {
34: 				return;
35: 			}
36: 		}
37: 			/**
38: 			 * Check if we are sending products to Algolia
39: 			 *
40: 			 * @return bool
41: 			 */
42: 		public static function verify_send_products_nonce() {
43: 			/**
44: 			 * Filter incoming nonces and values
45: 			 */
46: 			$send_products_nonce      = filter_input( INPUT_POST, 'send_products_to_algolia_nonce_name', FILTER_DEFAULT );
47: 			$send_products_to_algolia = filter_input( INPUT_POST, 'send_products_to_algolia', FILTER_DEFAULT );
48: 			/**
49: 			 * Display error and die if nonce is not verified and does not pass security check
50: 			 * Also check if the hidden value field send_products_to_algolia is set
51: 			 */
52: 			if ( ! wp_verify_nonce( $send_products_nonce, 'send_products_to_algolia_nonce_action' ) && isset( $send_products_to_algolia ) ) {
53: 				wp_die( esc_html__( 'Action is not allowed.', 'algolia-woo-indexer' ), esc_html__( 'Error!', 'algolia-woo-indexer' ) );
54: 			}
55: 			/**
56: 			 * If we have verified the send_products_nonce and the send_products hidden field is set, return true
57: 			 */
58: 			if ( wp_verify_nonce( $send_products_nonce, 'send_products_to_algolia_nonce_action' ) && isset( $send_products_to_algolia ) ) {
59: 				return true;
60: 			}
61: 		}
62: 	}
63: }
```

## File: renovate.json
```json
1: {
2:   "extends": [
3:     "config:base"
4:   ]
5: }
```

## File: repomix.config.json
```json
 1: {
 2:   "output": {
 3:     "filePath": "DOCS/repository_context.txt",
 4:     "style": "markdown",
 5:     "removeEmptyLines": true,
 6:     "fileSummary": true,
 7:     "directoryStructure": true,
 8:     "showLineNumbers": true,
 9:     "topFilesLength": 10,
10:     "includeEmptyDirectories": false,
11:     "headerText": "This file is automatically generated by Repomix to provide AI tools with up-to-date repository context. Last updated by GitHub Actions."
12:   },
13:   "ignore": {
14:     "useGitignore": true,
15:     "useDefaultPatterns": true,
16:     "customPatterns": [
17:       "DOCS/repository_context.txt",
18:       ".env*",
19:       "*.log",
20:       "dist",
21:       "build",
22:       "coverage"
23:     ]
24:   },
25:   "security": {
26:     "enableSecurityCheck": true
27:   },
28:   "tokenCount": {
29:     "encoding": "cl100k_base"
30:   }
31: }
```

## File: composer.json
```json
 1: {
 2:     "name": "daniel/algolia-woo-indexer",
 3:     "type": "wordpress-plugin",
 4:     "authors": [
 5:         {
 6:             "name": "w3bdesign",
 7:             "email": "45217974+w3bd3sign@users.noreply.github.com"
 8:         }
 9:     ],
10:     "require": {
11:         "algolia/algoliasearch-client-php": "^2.6"
12:     }
13: }
```

## File: readme.txt
```
 1: === Algolia Woo Indexer ===
 2: Contributors: Daniel F
 3: Tags: algolia, woocommerce, search, algolia search, algolia indexing
 4: Requires at least: not tested
 5: Tested up to: 6.1.1
 6: Stable tag: 1.0
 7: License: GPLv2 or later
 8: License URI: http://www.gnu.org/licenses/gpl-2.0.html
 9: 
10: 
11: == Description ==
12: This plugin indexes products inside of WooCommerce and submits them to Algolia. 
13: You need to add the Application ID, the Admin API Key from the `API keys` section in Algolia as well as the index name.
14: 
15: 
16: == Installation ==
17: * Upload `Algolia Woo Indexer` to the `/wp-content/plugins/` directory of your application
18: * Login as Admin
19: * Activate the plugin through the 'Plugins' menu in WordPress
20: * Login to Algolia and go to "API keys"
21: * Add the Application ID to the plugin settings page
22: * Add the Admin API Key to the plugin settings page
23: * Enter the name of the index that should be used to index Woocommerce products
24: 
25: 
26: == Frequently Asked Questions ==
27: None
28: 
29: 
30: == Changelog ==
31: 
32: = 1.0.8 =
33: * Minor package updates
34: 
35: = 1.0.7 =
36: * Add support for premium version
37: 
38: = 1.0 =
39: * Initial release
40: 
41: 
42: == Upgrade Notice ==
43: None
44: 
45: 
46: == License ==
47: This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
48: 
49: 
50: == Version history ==
51: 
52: 1.0.8 - Minor package updates
53: 1.0.7 - Add support for premium version
54: 1.0   - Initial version
```

## File: .github/workflows/phpcs.yml
```yaml
 1: on: pull_request
 2: name: Inspections
 3: jobs:
 4:   runPHPCSInspection:
 5:     name: Run PHPCS inspection
 6:     runs-on: ubuntu-latest
 7:     steps:
 8:     - uses: actions/checkout@v4
 9:       with:
10:         ref: ${{ github.event.pull_request.head.sha }}
11:     - name: Run PHPCS inspection
12:       uses: rtCamp/action-phpcs-code-review@v3.1.0
13:       env:
14:         GH_BOT_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
15:         SKIP_FOLDERS: "tests,.github,vendor"
16:       with:
17:         args: "WordPress"
```

## File: classes/class-algolia-woo-indexer.php
```php
  1: <?php
  2: /**
  3:  * Main Algolia Woo Indexer class
  4:  * Called from main plugin file algolia-woo-indexer.php
  5:  *
  6:  * @package algolia-woo-indexer
  7:  */
  8: namespace Algowoo;
  9: use \Algowoo\Algolia_Check_Requirements as Algolia_Check_Requirements;
 10: use \Algowoo\Algolia_Verify_Nonces as Algolia_Verify_Nonces;
 11: use \Algowoo\Algolia_Send_Products as Algolia_Send_Products;
 12: /**
 13:  * Abort if this file is called directly
 14:  */
 15: if (!defined('ABSPATH')) {
 16:     exit;
 17: }
 18: /**
 19:  * Include plugin file if function is_plugin_active does not exist
 20:  */
 21: if (!function_exists('is_plugin_active')) {
 22:     require_once(ABSPATH . '/wp-admin/includes/plugin.php');
 23: }
 24: if (!class_exists('Algolia_Woo_Indexer')) {
 25:     /**
 26:      * Algolia WooIndexer main class
 27:      */
 28:     // TODO Rename class "Algolia_Woo_Indexer" to match the regular expression ^[A-Z][a-zA-Z0-9]*$.
 29:     class Algolia_Woo_Indexer
 30:     {
 31:         const PLUGIN_NAME      = 'Algolia Woo Indexer';
 32:         const PLUGIN_TRANSIENT = 'algowoo-plugin-notice';
 33:         /**
 34:          * Class instance
 35:          *
 36:          * @var object
 37:          */
 38:         private static $instance;
 39:         /**
 40:          * The plugin URL
 41:          *
 42:          * @var string
 43:          */
 44:         private static $plugin_url = '';
 45:         /**
 46:          * Class constructor
 47:          *
 48:          * @return void
 49:          */
 50:         public function __construct()
 51:         {
 52:             $this->init();
 53:         }
 54:         /**
 55:          * Setup sections and fields to store and retrieve values from Settings API
 56:          *
 57:          * @return void
 58:          */
 59:         public static function setup_settings_sections()
 60:         {
 61:             /**
 62:              * Setup arguments for settings sections and fields
 63:              *
 64:              * @see https://developer.wordpress.org/reference/functions/register_setting/
 65:              */
 66:             if (is_admin()) {
 67:                 $arguments = array(
 68:                     'type'              => 'string',
 69:                     'sanitize_callback' => 'settings_fields_validate_options',
 70:                     'default'           => null,
 71:                 );
 72:                 register_setting('algolia_woo_options', 'algolia_woo_options', $arguments);
 73:                 /**
 74:                  * Make sure we reference the instance of the current class by using self::get_instance()
 75:                  * This way we can setup the correct callback function for add_settings_section and add_settings_field
 76:                  */
 77:                 $algowooindexer = self::get_instance();
 78:                 /**
 79:                  * Add our necessary settings sections and fields
 80:                  */
 81:                 add_settings_section(
 82:                     'algolia_woo_indexer_main',
 83:                     esc_html__('Algolia Woo Plugin Settings', 'algolia-woo-indexer'),
 84:                     array($algowooindexer, 'algolia_woo_indexer_section_text'),
 85:                     'algolia_woo_indexer'
 86:                 );
 87:                 add_settings_field(
 88:                     'algolia_woo_indexer_application_id',
 89:                     esc_html__('Application ID', 'algolia-woo-indexer'),
 90:                     array($algowooindexer, 'algolia_woo_indexer_application_id_output'),
 91:                     'algolia_woo_indexer',
 92:                     'algolia_woo_indexer_main'
 93:                 );
 94:                 add_settings_field(
 95:                     'algolia_woo_indexer_admin_api_key',
 96:                     esc_html__('Admin API Key', 'algolia-woo-indexer'),
 97:                     array($algowooindexer, 'algolia_woo_indexer_admin_api_key_output'),
 98:                     'algolia_woo_indexer',
 99:                     'algolia_woo_indexer_main'
100:                 );
101:                 add_settings_field(
102:                     'algolia_woo_indexer_index_name',
103:                     esc_html__('Index name (will be created if not existing)', 'algolia-woo-indexer'),
104:                     array($algowooindexer, 'algolia_woo_indexer_index_name_output'),
105:                     'algolia_woo_indexer',
106:                     'algolia_woo_indexer_main'
107:                 );
108:                 add_settings_field(
109:                     'algolia_woo_indexer_automatically_send_new_products',
110:                     esc_html__('Automatically index new products', 'algolia-woo-indexer'),
111:                     array($algowooindexer, 'algolia_woo_indexer_automatically_send_new_products_output'),
112:                     'algolia_woo_indexer',
113:                     'algolia_woo_indexer_main'
114:                 );
115:             }
116:         }
117:         /**
118:          * Output for admin API key field
119:          *
120:          * @see https://developer.wordpress.org/reference/functions/wp_nonce_field/
121:          *
122:          * @return void
123:          */
124:         public static function algolia_woo_indexer_admin_api_key_output()
125:         {
126:             $api_key = get_option(ALGOWOO_DB_OPTION . ALGOLIA_API_KEY);
127:             $api_key = is_string($api_key) ? $api_key : CHANGE_ME;
128:             wp_nonce_field('algolia_woo_indexer_admin_api_nonce_action', 'algolia_woo_indexer_admin_api_nonce_name');
129:             echo "<input id='algolia_woo_indexer_admin_api_key' name='algolia_woo_indexer_admin_api_key[key]'
130: 				type='text' value='" . esc_attr($api_key) . "' />";
131:         }
132:         /**
133:          * Output for application ID field
134:          *
135:          * @return void
136:          */
137:         public static function algolia_woo_indexer_application_id_output()
138:         {
139:             $application_id = get_option(ALGOWOO_DB_OPTION . ALGOLIA_APP_ID);
140:             $application_id = is_string($application_id) ? $application_id : CHANGE_ME;
141:             echo "<input id='algolia_woo_indexer_application_id' name='algolia_woo_indexer_application_id[id]'
142: 				type='text' value='" . esc_attr($application_id) . "' />";
143:         }
144:         /**
145:          * Output for index name field
146:          *
147:          * @return void
148:          */
149:         public static function algolia_woo_indexer_index_name_output()
150:         {
151:             $index_name = get_option(ALGOWOO_DB_OPTION . INDEX_NAME);
152:             $index_name = is_string($index_name) ? $index_name : CHANGE_ME;
153:             echo "<input id='algolia_woo_indexer_index_name' name='algolia_woo_indexer_index_name[name]'
154: 				type='text' value='" . esc_attr($index_name) . "' />";
155:         }
156:         /**
157:          * Output for checkbox to check if we automatically send new products to Algolia
158:          *
159:          * @return void
160:          */
161:         public static function algolia_woo_indexer_automatically_send_new_products_output()
162:         {
163:             /**
164:              * Sanitization is not really needed as the variable is not directly echoed
165:              * But I have still done it to be 100% safe
166:              */
167:             $auto_send = get_option(ALGOWOO_DB_OPTION . AUTOMATICALLY_SEND_NEW_PRODUCTS);
168:             $auto_send = (!empty($auto_send)) ? 1 : 0; ?>
169:             <input id="algolia_woo_indexer_automatically_send_new_products" name="algolia_woo_indexer_automatically_send_new_products[checked]" type="checkbox" <?php checked(1, $auto_send); ?> />
170:         <?php
171:         }
172:         /**
173:          * Section text for plugin settings section text
174:          *
175:          * @return void
176:          */
177:         public static function algolia_woo_indexer_section_text()
178:         {
179:             echo esc_html__('Enter your settings here', 'algolia-woo-indexer');
180:         }
181:         /**
182:          * Check if we are going to send products by verifying send products nonce
183:          *
184:          * @return void
185:          */
186:         public static function maybe_send_products()
187:         {
188:             if (true === Algolia_Verify_Nonces::verify_send_products_nonce()) {
189:                 Algolia_Send_Products::send_products_to_algolia();
190:             }
191:         }
192:         /**
193:          * Initialize class, setup settings sections and fields
194:          *
195:          * @return void
196:          */
197:         public static function init()
198:         {
199:             /**
200:              * Fetch the option to see if we are going to automatically send new products
201:              */
202:             $auto_send = get_option(ALGOWOO_DB_OPTION . AUTOMATICALLY_SEND_NEW_PRODUCTS);
203:             /**
204:              * Check that we have the minimum versions required and all of the required PHP extensions
205:              */
206:             Algolia_Check_Requirements::check_unmet_requirements();
207:             if (!Algolia_Check_Requirements::algolia_wp_version_check() || !Algolia_Check_Requirements::algolia_php_version_check()) {
208:                 add_action(
209:                     'admin_notices',
210:                     function () {
211:                         echo '<div class="error notice">
212:                                   <p>' . esc_html__('Please check the server requirements for Algolia Woo Indexer. <br/> It requires minimum PHP version 7.2 and WordPress version 5.0', 'algolia-woo-indexer') . '</p>
213:                                 </div>';
214:                     }
215:                 );
216:             }
217:             $ob_class = get_called_class();
218:             /**
219:              * Setup translations
220:              */
221:             add_action('plugins_loaded', array($ob_class, 'load_textdomain'));
222:             /**
223:              * Add actions to setup admin menu
224:              */
225:             if (is_admin()) {
226:                 add_action('admin_menu', array($ob_class, 'admin_menu'));
227:                 add_action('admin_init', array($ob_class, 'setup_settings_sections'));
228:                 add_action('admin_init', array($ob_class, 'update_settings_options'));
229:                 add_action('admin_init', array($ob_class, 'maybe_send_products'));
230:                 /**
231:                  * Register hook to automatically send new products if the option is set
232:                  */
233:                 if ('1' === $auto_send) {
234:                     add_action('save_post', array($ob_class, 'send_new_product_to_algolia'), 10, 3);
235:                 }
236:                 self::$plugin_url = admin_url('options-general.php?page=algolia-woo-indexer-settings');
237:                 if (!is_plugin_active('woocommerce/woocommerce.php')) {
238:                     add_action(
239:                         'admin_notices',
240:                         function () {
241:                             echo '<div class="error notice">
242: 								  <p>' . esc_html__('WooCommerce plugin must be enabled for Algolia Woo Indexer to work.', 'algolia-woo-indexer') . '</p>
243: 								</div>';
244:                         }
245:                     );
246:                 }
247:             }
248:         }
249:         /**
250:          * Send a single product to Algolia once a new product has been published
251:          *
252:          * @param int   $post_id ID of the product.
253:          * @param array $post Post array.
254:          *
255:          * @return void
256:          */
257:         public static function send_new_product_to_algolia($post_id, $post)
258:         {
259:             if ('publish' !== $post->post_status || 'product' !== $post->post_type) {
260:                 return;
261:             }
262:             Algolia_Send_Products::send_products_to_algolia($post_id);
263:         }
264:         /**
265:          * Verify nonces before we update options and settings
266:          * Also retrieve the value from the send_products_to_algolia hidden field to check if we are sending products to Algolia
267:          *
268:          * @return void
269:          */
270:         public static function update_settings_options()
271:         {
272:             Algolia_Verify_Nonces::verify_settings_nonce();
273:             if (Algolia_Verify_Nonces::verify_send_products_nonce()) {
274:                 return;
275:             }
276:             $application_id = filter_input(INPUT_POST, 'algolia_woo_indexer_application_id', FILTER_DEFAULT, FILTER_REQUIRE_ARRAY);
277:             $api_key = filter_input(INPUT_POST, 'algolia_woo_indexer_admin_api_key', FILTER_DEFAULT, FILTER_REQUIRE_ARRAY);
278:             $index_name = filter_input(INPUT_POST, 'algolia_woo_indexer_index_name', FILTER_DEFAULT, FILTER_REQUIRE_ARRAY);
279:             $auto_send = filter_input(INPUT_POST, 'algolia_woo_indexer_automatically_send_new_products', FILTER_DEFAULT, FILTER_REQUIRE_ARRAY);
280:             $sanitized_app_id = sanitize_text_field($application_id['id']);
281:             $sanitized_api_key = sanitize_text_field($api_key['key']);
282:             $sanitized_index_name = sanitize_text_field($index_name['name']);
283:             $sanitized_auto_send = (!empty($auto_send)) ? 1 : 0;
284:             $options = [
285:                 ALGOWOO_DB_OPTION . ALGOLIA_APP_ID => $sanitized_app_id,
286:                 ALGOWOO_DB_OPTION . ALGOLIA_API_KEY => $sanitized_api_key,
287:                 ALGOWOO_DB_OPTION . INDEX_NAME => $sanitized_index_name,
288:                 ALGOWOO_DB_OPTION . AUTOMATICALLY_SEND_NEW_PRODUCTS => $sanitized_auto_send,
289:             ];
290:             foreach ($options as $option_key => $option_value) {
291:                 if (isset($option_value) && (!empty($option_value))) {
292:                     update_option($option_key, $option_value);
293:                 }
294:             }
295:         }
296:         /**
297:          * Sanitize input in settings fields and filter through regex to accept only a-z and A-Z
298:          *
299:          * @param string $input Settings text data
300:          * @return array
301:          */
302:         public static function settings_fields_validate_options($input)
303:         {
304:             $valid         = array();
305:             $valid['name'] = preg_replace(
306:                 '/[^a-zA-Z\s]/',
307:                 '',
308:                 $input['name']
309:             );
310:             return $valid;
311:         }
312:         /**
313:          * Load text domain for translations
314:          *
315:          * @return void
316:          */
317:         public static function load_textdomain()
318:         {
319:             load_plugin_textdomain('algolia-woo-indexer', false, basename(dirname(__FILE__)) . '/languages/');
320:         }
321:         /**
322:          * Add the new menu to settings section so that we can configure the plugin
323:          *
324:          * @return void
325:          */
326:         public static function admin_menu()
327:         {
328:             add_submenu_page(
329:                 'options-general.php',
330:                 esc_html__('Algolia Woo Indexer Settings', 'algolia-woo-indexer'),
331:                 esc_html__('Algolia Woo Indexer Settings', 'algolia-woo-indexer'),
332:                 'manage_options',
333:                 'algolia-woo-indexer-settings',
334:                 array(get_called_class(), 'algolia_woo_indexer_settings')
335:             );
336:         }
337:         /**
338:          * Display settings and allow user to modify them
339:          *
340:          * @return void
341:          */
342:         public static function algolia_woo_indexer_settings()
343:         {
344:             /**
345:              * Verify that the user can access the settings page
346:              */
347:             if (!current_user_can('manage_options')) {
348:                 wp_die(esc_html__('Action not allowed.', 'algolia_woo_indexer_settings'));
349:             } ?>
350:             <div class="wrap">
351:                 <h1><?php esc_html__('Algolia Woo Indexer Settings', 'algolia-woo-indexer'); ?></h1>
352:                 <form action="<?php echo esc_url(self::$plugin_url); ?>" method="POST">
353:                     <?php
354:                     settings_fields('algolia_woo_options');
355:                     do_settings_sections('algolia_woo_indexer');
356:                     submit_button('', 'primary wide'); ?>
357:                 </form>
358:                 <form action="<?php echo esc_url(self::$plugin_url); ?>" method="POST">
359:                     <?php wp_nonce_field('send_products_to_algolia_nonce_action', 'send_products_to_algolia_nonce_name'); ?>
360:                     <input type="hidden" name="send_products_to_algolia" id="send_products_to_algolia" value="true" />
361:                     <?php submit_button(esc_html__('Send products to Algolia', 'algolia_woo_indexer_settings'), 'primary wide', '', false); ?>
362:                 </form>
363:             </div>
364: <?php
365:         }
366:         /**
367:          * Get active object instance
368:          *
369:          * @return object
370:          */
371:         public static function get_instance()
372:         {
373:             if (!self::$instance) {
374:                 self::$instance = new Algolia_Woo_Indexer();
375:             }
376:             return self::$instance;
377:         }
378:         /**
379:          * The actions to execute when the plugin is activated.
380:          *
381:          * @return void
382:          */
383:         public static function activate_plugin()
384:         {
385:             /**
386:              * Set default values for options if not already set
387:              */
388:             $auto_send = get_option(ALGOWOO_DB_OPTION . AUTOMATICALLY_SEND_NEW_PRODUCTS);
389:             $algolia_application_id          = get_option(ALGOWOO_DB_OPTION . ALGOLIA_APP_ID);
390:             $algolia_api_key                 = get_option(ALGOWOO_DB_OPTION . ALGOLIA_API_KEY);
391:             $algolia_index_name              = get_option(ALGOWOO_DB_OPTION . INDEX_NAME);
392:             if (empty($auto_send)) {
393:                 add_option(
394:                     ALGOWOO_DB_OPTION . AUTOMATICALLY_SEND_NEW_PRODUCTS,
395:                     '0'
396:                 );
397:             }
398:             if (empty($algolia_application_id)) {
399:                 add_option(
400:                     ALGOWOO_DB_OPTION . ALGOLIA_APP_ID,
401:                     'Change me'
402:                 );
403:             }
404:             if (empty($algolia_api_key)) {
405:                 add_option(
406:                     ALGOWOO_DB_OPTION . ALGOLIA_API_KEY,
407:                     'Change me'
408:                 );
409:             }
410:             if (empty($algolia_index_name)) {
411:                 add_option(
412:                     ALGOWOO_DB_OPTION . INDEX_NAME,
413:                     'Change me'
414:                 );
415:             }
416:             set_transient(self::PLUGIN_TRANSIENT, true);
417:         }
418:         /**
419:          * The actions to execute when the plugin is deactivated.
420:          *
421:          * @return void
422:          */
423:         public static function deactivate_plugin()
424:         {
425:             delete_transient(self::PLUGIN_TRANSIENT);
426:         }
427:     }
428: }
```

## File: classes/class-send-products.php
```php
  1: <?php
  2: /**
  3:  * Algolia Woo Indexer class for sending products
  4:  * Called from main plugin file algolia-woo-indexer.php
  5:  *
  6:  * @package algolia-woo-indexer
  7:  */
  8: namespace Algowoo;
  9: use \Algowoo\Algolia_Check_Requirements as Algolia_Check_Requirements;
 10: /**
 11:  * Abort if this file is called directly
 12:  */
 13: if (!defined('ABSPATH')) {
 14:     exit;
 15: }
 16: /**
 17:  * Include plugin file if function is_plugin_active does not exist
 18:  */
 19: if (!function_exists('is_plugin_active')) {
 20:     require_once(ABSPATH . '/wp-admin/includes/plugin.php');
 21: }
 22: /**
 23:  * Define the plugin version and the database table name
 24:  */
 25: define('ALGOWOO_DB_OPTION', '_algolia_woo_indexer');
 26: define('ALGOWOO_CURRENT_DB_VERSION', '0.3');
 27: /**
 28:  * Define application constants
 29:  */
 30: define('CHANGE_ME', 'change me');
 31: /**
 32:  * Database table names
 33:  */
 34: define('INDEX_NAME', '_index_name');
 35: define('AUTOMATICALLY_SEND_NEW_PRODUCTS', '_automatically_send_new_products');
 36: define('ALGOLIA_APP_ID', '_application_id');
 37: define('ALGOLIA_API_KEY', '_admin_api_key');
 38: if (!class_exists('Algolia_Send_Products')) {
 39:     /**
 40:      * Algolia WooIndexer main class
 41:      */
 42:     // TODO Rename class "Algolia_Send_Products" to match the regular expression ^[A-Z][a-zA-Z0-9]*$.
 43:     class Algolia_Send_Products
 44:     {
 45:         const PLUGIN_NAME      = 'Algolia Woo Indexer';
 46:         const PLUGIN_TRANSIENT = 'algowoo-plugin-notice';
 47:         /**
 48:          * The Algolia instance
 49:          *
 50:          * @var \Algolia\AlgoliaSearch\SearchClient
 51:          */
 52:         private static $algolia = null;
 53:         /**
 54:          * Check if we can connect to Algolia, if not, handle the exception, display an error and then return
 55:          */
 56:         public static function can_connect_to_algolia()
 57:         {
 58:             try {
 59:                 self::$algolia->listApiKeys();
 60:             } catch (\Algolia\AlgoliaSearch\Exceptions\UnreachableException $error) {
 61:                 add_action(
 62:                     'admin_notices',
 63:                     function () {
 64:                         echo '<div class="error notice">
 65: 							  <p>' . esc_html__('An error has been encountered. Please check your application ID and API key. ', 'algolia-woo-indexer') . '</p>
 66: 							</div>';
 67:                     }
 68:                 );
 69:                 return;
 70:             }
 71:         }
 72:         /**
 73:          * Get sale price or regular price based on product type
 74:          *
 75:          * @param  mixed $product Product to check   
 76:          * @return array ['sale_price' => $sale_price,'regular_price' => $regular_price] Array with regular price and sale price
 77:          */
 78:         public static function get_product_type_price($product)
 79:         {
 80:             $sale_price = 0;
 81:             $regular_price = 0;
 82:             if ($product->is_type('simple')) {
 83:                 $sale_price     =  $product->get_sale_price();
 84:                 $regular_price  =  $product->get_regular_price();
 85:             } elseif ($product->is_type('variable')) {
 86:                 $sale_price     =  $product->get_variation_sale_price('min', true);
 87:                 $regular_price  =  $product->get_variation_regular_price('max', true);
 88:             }
 89:             return array(
 90:                 'sale_price' => $sale_price,
 91:                 'regular_price' => $regular_price
 92:             );
 93:         }
 94:         /**
 95:          * Send WooCommerce products to Algolia
 96:          *
 97:          * @param Int $id Product to send to Algolia if we send only a single product
 98:          * @return void
 99:          */
100:         public static function send_products_to_algolia($id = '')
101:         {
102:             /**
103:              * Remove classes from plugin URL and autoload Algolia with Composer
104:              */
105:             $base_plugin_directory = str_replace('classes', '', dirname(__FILE__));
106:             require_once $base_plugin_directory . '/vendor/autoload.php';
107:             /**
108:              * Fetch the required variables from the Settings API
109:              */
110:             $algolia_application_id = get_option(ALGOWOO_DB_OPTION . ALGOLIA_APP_ID);
111:             $algolia_application_id = is_string($algolia_application_id) ? $algolia_application_id : CHANGE_ME;
112:             $algolia_api_key        = get_option(ALGOWOO_DB_OPTION . ALGOLIA_API_KEY);
113:             $algolia_api_key        = is_string($algolia_api_key) ? $algolia_api_key : CHANGE_ME;
114:             $algolia_index_name     = get_option(ALGOWOO_DB_OPTION . INDEX_NAME);
115:             $algolia_index_name        = is_string($algolia_index_name) ? $algolia_index_name : CHANGE_ME;
116:             /**
117:              * Display admin notice and return if not all values have been set
118:              */
119:             Algolia_Check_Requirements::check_algolia_input_values($algolia_application_id, $algolia_api_key, $algolia_index_name);
120:             /**
121:              * Initiate the Algolia client
122:              */
123:             self::$algolia = \Algolia\AlgoliaSearch\SearchClient::create($algolia_application_id, $algolia_api_key);
124:             /**
125:              * Check if we can connect, if not, handle the exception, display an error and then return
126:              */
127:             self::can_connect_to_algolia();
128:             /**
129:              * Initialize the search index and set the name to the option from the database
130:              */
131:             $index = self::$algolia->initIndex($algolia_index_name);
132:             /**
133:              * Setup arguments for sending all products to Algolia
134:              *
135:              * Limit => -1 means we send all products
136:              */
137:             $arguments = array(
138:                 'status'   => 'publish',
139:                 'limit'    => -1,
140:                 'paginate' => false,
141:             );
142:             /**
143:              * Setup arguments for sending only a single product
144:              */
145:             if (isset($id) && '' !== $id) {
146:                 $arguments = array(
147:                     'status'   => 'publish',
148:                     'include'  => array($id),
149:                     'paginate' => false,
150:                 );
151:             }
152:             /**
153:              * Fetch all products from WooCommerce
154:              *
155:              * @see https://docs.woocommerce.com/wc-apidocs/function-wc_get_products.html
156:              */
157:             $products =
158:                 /** @scrutinizer ignore-call */
159:                 wc_get_products($arguments);
160:             if (empty($products)) {
161:                 return;
162:             }
163:             $records = array();
164:             $record  = array();
165:             foreach ($products as $product) {
166:                 /**
167:                  * Set sale price or regular price based on product type
168:                  */
169:                 $product_type_price = self::get_product_type_price($product);
170:                 $sale_price = $product_type_price['sale_price'];
171:                 $regular_price = $product_type_price['regular_price']; 
172:                 /**
173:                  * Extract image from $product->get_image()
174:                  */
175:                 preg_match('/<img(.*)src(.*)=(.*)"(.*)"/U', $product->get_image(), $result);
176:                 $product_image = array_pop($result);
177:                 /**
178:                  * Build the record array using the information from the WooCommerce product
179:                  */
180:                 $record['objectID']                      = $product->get_id();
181:                 $record['product_name']                  = $product->get_name();
182:                 $record['product_image']                 = $product_image;
183:                 $record['short_description']             = $product->get_short_description();
184:                 $record['regular_price']                 = $regular_price;
185:                 $record['sale_price']                    = $sale_price;
186:                 $record['on_sale']                       = $product->is_on_sale();
187:                 $records[] = $record;
188:             }
189:             wp_reset_postdata();
190:             /**
191:              * Send the information to Algolia and save the result
192:              * If result is NullResponse, print an error message
193:              */
194:             $result = $index->saveObjects($records);
195:             if ('Algolia\AlgoliaSearch\Response\NullResponse' === get_class($result)) {
196:                 wp_die(esc_html__('No response from the server. Please check your settings and try again', 'algolia_woo_indexer_settings'));
197:             }
198:             /**
199:              * Display success message
200:              */
201:             echo '<div class="notice notice-success is-dismissible">
202: 					 	<p>' . esc_html__('Product(s) sent to Algolia.', 'algolia-woo-indexer') . '</p>
203: 				  		</div>';
204:         }
205:     }
206: }
```

## File: algolia-woo-indexer.php
```php
 1: <?php
 2: /**
 3:  * Plugin Name:     Algolia WooCommerce Indexer
 4:  * Description:     Implement Algolia indexing from WooCommerce
 5:  * Text Domain:     algolia-woo-indexer
 6:  * Author:          Daniel Fjeldstad
 7:  * Requires at least: 6.0
 8:  * Tested up to: 6.2.0
 9:  * Requires PHP: 8.1
10:  * WC requires at least: 7.0.0
11:  * WC tested up to: 7.4.0
12:  * Version:         1.0.8
13:  *
14:  * @package         algolia-woo-indexer
15:  * @license         GNU version 3
16:  */
17: /**
18:  * Abort if this file is called directly
19:  */
20: if ( ! defined( 'ABSPATH' ) ) {
21: 	exit;
22: }
23: /**
24:  * Main class file
25:  */
26: require_once plugin_dir_path( __FILE__ ) . '/classes/class-algolia-woo-indexer.php';
27: /**
28:  * Class for checking plugin requirements
29:  */
30: require_once plugin_dir_path( __FILE__ ) . '/classes/class-check-requirements.php';
31: /**
32:  * Class for verifying nonces
33:  */
34: require_once plugin_dir_path( __FILE__ ) . '/classes/class-verify-nonces.php';
35: /**
36:  * Class for sending products
37:  */
38: require_once plugin_dir_path( __FILE__ ) . '/classes/class-send-products.php';
39: $algowooindexer = \Algowoo\Algolia_Woo_Indexer::get_instance();
40: register_activation_hook( __FILE__, array( $algowooindexer, 'activate_plugin' ) );
41: register_deactivation_hook( __FILE__, array( $algowooindexer, 'deactivate_plugin' ) );
```

## File: README.md
```markdown
 1: [![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/w3bdesign/algolia-woo-indexer/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/w3bdesign/algolia-woo-indexer/?branch=master)
 2: [![Codacy Badge](https://app.codacy.com/project/badge/Grade/bfe1f91c2d3a40e6953baabeee88f781)](https://www.codacy.com/gh/w3bdesign/algolia-woo-indexer/dashboard?utm_source=github.com&utm_medium=referral&utm_content=w3bdesign/algolia-woo-indexer&utm_campaign=Badge_Grade)
 3: ![PHP Linter](https://img.shields.io/badge/Code%20checked%20with-PHPCS-green)
 4: 
 5: ![Screenshot](/screenshots/screenshot1.jpg)
 6: 
 7: # Algolia WooCommerce Indexer
 8: 
 9: ## Description
10: 
11: This plugin transfers products from WooCommerce to Algolia. You can choose if it only sends products that are in stock.
12: 
13: You need to add the Application ID, the Admin API Key from the `API keys` section in Algolia as well as the Index Name.
14: 
15: Note that this plugin is designed for developers developing headless Ecommerce solutions.
16: 
17: ### This plugin will NOT submit products without a category
18: 
19: ## Basic Features
20: 
21: - Manually or automatically submit WooCommerce products to Algolia
22: - Default options are added upon plugin activation
23: - Options are deleted from database upon plugin uninstallation (not on deactivation)
24: 
25: ## Advanced Features
26: 
27: - POT file for translations is included
28: - All code scanned and verified with PHPCS
29: - Code follows modern coding standards
30: - All variables are properly sanitized to ensure that no security issues are present
31: - Repository documentation with AI, for easier development with LLM-models
32: 
33: ## Requirements
34: 
35: - An account at www.algolia.com (either free or premium)
36: - Access to install and activate plugins (usually administrator rights)
37: - WordPress 6.1.1 or newer
38: - WooCommerce 7.4.0 or newer
39: - PHP 8.1 or newer
40: - PHP extensions/functions enabled: `mbstring`, `mbregex` and `cURL`
41: - All products MUST have a category assigned (Uncategorized is not a category), or they will not be submitted
42: 
43: ## Installation
44: 
45: - Login to WordPress as Admin
46: - Upload `Algolia Woo Indexer` to the `/wp-content/plugins/` directory of your application
47: - Activate the plugin through the `Plugins` menu in WordPress
48: - Login to Algolia and go to `API keys` and copy or write down the Application ID and the `Admin API Key`
49: - Go back to WordPress and access plugin settings under `Settings->Algolia Woo Indexer`
50: - Add the `Application ID` to the plugin settings page
51: - Add the `Admin API Key` to the plugin settings page
52: - Add the name of the index that should be used to index WooCommerce products
53: - Click on the `Send products with Algolia` button to send the products to Algolia
54: 
55: ## Troubleshooting
56: 
57: If you encounter any errors, first of all make sure that your hosting environment meets the requirements listed under Requirements.
58: 
59: Feel free to <a href="https://github.com/w3bdesign/algolia-woo-indexer/issues">open an issue</a> and I will do my best to troubleshoot and assist.
60: 
61: ### TODO
62: 
63: - Upgrade Algolia package and check that it works correctly
```
